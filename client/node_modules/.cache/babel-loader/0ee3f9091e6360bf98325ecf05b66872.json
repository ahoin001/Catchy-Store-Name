{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/collection/collection-container.jsx\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\nimport { fetchCollectionsStart } from '../../redux/shop/shop-actions';\nimport Collection from './collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nconst CollectionsContainer = props => {\n  const structuredSelector = createStructuredSelector({\n    isLoadingCollections: state => selectIsCollectionsLoaded(state)\n  });\n  const dispatch = useDispatch();\n  const fetchCollectionsAsyncAction = React.useCallback(() => dispatch(fetchCollectionsStart()), [dispatch]); // ? Async actions to firebase to get store data\n\n  useEffect(() => {\n    const getShopData = () => {\n      fetchCollectionsAsyncAction();\n    };\n\n    getShopData();\n  }, []);\n  const {\n    isLoadingCollections\n  } = useSelector(structuredSelector);\n  return /*#__PURE__*/React.createElement(Collection, Object.assign({\n    isLoading: !isLoadingCollections\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default WithSpinner(CollectionsContainer);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/collection/collection-container.jsx"],"names":["React","useEffect","useSelector","useDispatch","createStructuredSelector","selectIsCollectionsLoaded","fetchCollectionsStart","Collection","WithSpinner","CollectionsContainer","props","structuredSelector","isLoadingCollections","state","dispatch","fetchCollectionsAsyncAction","useCallback","getShopData"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,QAAMC,kBAAkB,GAAGP,wBAAwB,CAAC;AAChDQ,IAAAA,oBAAoB,EAAGC,KAAD,IAAWR,yBAAyB,CAACQ,KAAD;AADV,GAAD,CAAnD;AAKA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,2BAA2B,GAAGf,KAAK,CAACgB,WAAN,CAChC,MAAMF,QAAQ,CAACR,qBAAqB,EAAtB,CADkB,EAEhC,CAACQ,QAAD,CAFgC,CAApC,CAToC,CAcpC;;AACAb,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMgB,WAAW,GAAG,MAAM;AAEtBF,MAAAA,2BAA2B;AAE9B,KAJD;;AAMAE,IAAAA,WAAW;AAEd,GAVQ,EAUN,EAVM,CAAT;AAaA,QAAM;AAAEL,IAAAA;AAAF,MAA2BV,WAAW,CAACS,kBAAD,CAA5C;AAEA,sBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,CAACC;AAAxB,KAAkDF,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAIH,CAlCD;;AAoCA,eAAeF,WAAW,CAACC,oBAAD,CAA1B","sourcesContent":["import React,{useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors'\nimport {fetchCollectionsStart} from '../../redux/shop/shop-actions'\n\nimport Collection from './collection'\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nconst CollectionsContainer = (props) => {\n\n    const structuredSelector = createStructuredSelector({\n        isLoadingCollections: (state) => selectIsCollectionsLoaded(state)\n    })\n\n\n    const dispatch = useDispatch();\n\n    const fetchCollectionsAsyncAction = React.useCallback(\n        () => dispatch(fetchCollectionsStart()),\n        [dispatch]\n    )\n\n    // ? Async actions to firebase to get store data\n    useEffect(() => {\n\n        const getShopData = () => {\n\n            fetchCollectionsAsyncAction()\n\n        }\n\n        getShopData();\n\n    }, [])\n\n\n    const { isLoadingCollections } = useSelector(structuredSelector);\n\n    return (\n        <Collection isLoading={!isLoadingCollections} {...props} />\n    )\n\n};\n\nexport default WithSpinner(CollectionsContainer);"]},"metadata":{},"sourceType":"module"}