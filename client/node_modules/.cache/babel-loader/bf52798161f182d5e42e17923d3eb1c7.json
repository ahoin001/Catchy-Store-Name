{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/cart/cart-icon/cart-icon.jsx\";\nimport React from 'react';\nimport { connect, useSelector, shallowEqual } from 'react-redux';\nimport { getTotalItems } from '../../../redux/cart-dropdown/selectors/cart-items';\nimport { toggleCartDisplay } from '../../../redux/cart-dropdown/cart-dropdown-actions';\nimport { ReactComponent as ShoppingCartIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/shoppingbag.svg\";\nimport './cart-icon.scss';\n\nconst CartIcon = props => {\n  const totalItems = useSelector(state => getTotalItems(state));\n  console.log(totalItems);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: () => props.toggleCartDropDown(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    className: \"shopping-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, totalItems));\n}; // dispatch provided by connect\n\n\nconst mapDispatchToProps = dispatch => {\n  // ? this object will be spread to props\n  return {\n    // ? Dispatch excecutes action creator function with user argument and returns the action object for dispatch excecution\n    toggleCartDropDown: () => dispatch(toggleCartDisplay())\n  };\n}; // ? Deconstruct to get nested property value from state object recieved by connect\n\n\nconst mapStateToProps = ({\n  cartDropDown: {\n    cartItems\n  }\n}) => {\n  console.log(`I HAVE BEEN CALLED`);\n  return {\n    totalItems: cartItems.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity;\n    }, 0)\n  };\n}; // const totalItems = useSelector(getTotalItems)\n// const totalItems = useSelector(({ cartDropDown: { cartItems } }) => {\n//     cartItems.reduce((accumulator, currentValue) => {\n//         return accumulator + currentValue.quantity\n//     }, 0)\n// })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/cart/cart-icon/cart-icon.jsx"],"names":["React","connect","useSelector","shallowEqual","getTotalItems","toggleCartDisplay","CartIcon","props","totalItems","state","console","log","toggleCartDropDown","mapDispatchToProps","dispatch","mapStateToProps","cartDropDown","cartItems","reduce","accumulator","currentValue","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,YAA/B,QAAmD,aAAnD;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAEA,SAASC,iBAAT,QAAkC,oDAAlC;;AAIA,OAAO,kBAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWL,aAAa,CAACK,KAAD,CAAzB,CAA9B;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACI,sBAGI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACK,kBAAN,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BJ,UAA9B,CANJ,CAHJ;AAcH,CAlBD,C,CAoBA;;;AACA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AAEnC;AACA,SAAO;AAEH;AACAF,IAAAA,kBAAkB,EAAE,MAAME,QAAQ,CAACT,iBAAiB,EAAlB;AAH/B,GAAP;AAMH,CATD,C,CAWA;;;AACA,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,YAAY,EAAE;AAAEC,IAAAA;AAAF;AAAhB,CAAD,KAAqC;AACzDP,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb;AACA,SAAO;AACHH,IAAAA,UAAU,EAAES,SAAS,CAACC,MAAV,CAAiB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACxD,aAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,KAFW,EAET,CAFS;AADT,GAAP;AAMH,CARD,C,CAUA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAepB,OAAO,CAACc,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect, useSelector, shallowEqual } from 'react-redux'\nimport { getTotalItems } from '../../../redux/cart-dropdown/selectors/cart-items'\n\nimport { toggleCartDisplay } from '../../../redux/cart-dropdown/cart-dropdown-actions'\n\nimport { ReactComponent as ShoppingCartIcon } from \"../../../assets/shoppingbag.svg\";\n\nimport './cart-icon.scss'\n\nconst CartIcon = (props) => {\n\n    const totalItems = useSelector((state) => getTotalItems(state))\nconsole.log(totalItems)\n    return (\n\n\n        <div\n            className=\"cart-icon\"\n            onClick={() => props.toggleCartDropDown()}\n        >\n\n            <ShoppingCartIcon className=\"shopping-icon\" />\n            <span className=\"item-count\">{totalItems}</span>\n\n        </div>\n    );\n\n};\n\n// dispatch provided by connect\nconst mapDispatchToProps = dispatch => {\n\n    // ? this object will be spread to props\n    return {\n\n        // ? Dispatch excecutes action creator function with user argument and returns the action object for dispatch excecution\n        toggleCartDropDown: () => dispatch(toggleCartDisplay())\n\n    }\n}\n\n// ? Deconstruct to get nested property value from state object recieved by connect\nconst mapStateToProps = ({ cartDropDown: { cartItems } }) => {\n    console.log(`I HAVE BEEN CALLED`)\n    return {\n        totalItems: cartItems.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n\n}\n\n// const totalItems = useSelector(getTotalItems)\n\n// const totalItems = useSelector(({ cartDropDown: { cartItems } }) => {\n//     cartItems.reduce((accumulator, currentValue) => {\n//         return accumulator + currentValue.quantity\n//     }, 0)\n// })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);    "]},"metadata":{},"sourceType":"module"}