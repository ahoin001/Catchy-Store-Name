{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../shared/forminput/FormInput';\nimport { auth, createUserProfileDocument } from '../config/firebase/firebase-util';\nimport './dynamic.scss';\nimport '../shared/button/google-button.scss';\n\nconst Login = () => {\n  const [userInput, setuserInput] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  const handleSignUp = async event => {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = userInput; // if (password !== confirmPassword) {\n    //     alert('Passwords do not match')\n    //     return;\n    // }\n\n    try {\n      // ? Creates user and signs user in, returns object with user key to get user data \n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      console.log('User from sign up: ', user); // ? Save the user as a document to firestore\n\n      await createUserProfileDocument(user, {\n        name\n      }); // Clear form \n\n      setuserInput({\n        name: '',\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log('Error creation', error);\n    }\n  };\n\n  const handleUserInput = e => {\n    // ? Name attribute in input allows getting the proper input\n    // console.log(`INPUT NAME: `, e.target.name)\n    // ? Copy UserInput, Then change one property\n    // ? (Will modify not add if new property would have been in spread)\n    setuserInput({ ...userInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form sign-up\",\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Time to feel like home\"), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"name\",\n    type: \"text\",\n    handleChange: handleUserInput,\n    value: userInput.name,\n    label: \"Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleUserInput,\n    value: userInput.email,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleUserInput,\n    value: userInput.password,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"submit\",\n    onClick: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      let a;\n    },\n    type: \"button\",\n    className: \"loginBtn loginBtn--google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Join with \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 110\n    }\n  }, \"Google\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx"],"names":["React","useState","FormInput","auth","createUserProfileDocument","Login","userInput","setuserInput","name","email","password","handleSignUp","event","preventDefault","user","createUserWithEmailAndPassword","console","log","error","handleUserInput","e","target","value","a"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormInput from '../shared/forminput/FormInput'\nimport { auth, createUserProfileDocument } from '../config/firebase/firebase-util'\n\nimport './dynamic.scss'\nimport '../shared/button/google-button.scss'\n\nconst Login = () => {\n\n    const [userInput, setuserInput] = useState({ name: '', email: '', password: '' })\n\n\n    const handleSignUp = async (event) => {\n\n        event.preventDefault();\n\n        const { name, email, password } = userInput\n\n        // if (password !== confirmPassword) {\n        //     alert('Passwords do not match')\n        //     return;\n        // }\n\n        try {\n\n            // ? Creates user and signs user in, returns object with user key to get user data \n            const { user } = await auth.createUserWithEmailAndPassword(email, password)\n\n            console.log('User from sign up: ', user)\n\n            // ? Save the user as a document to firestore\n            await createUserProfileDocument(user, { name })\n\n            // Clear form \n            setuserInput(\n                {\n                    name: '',\n                    email: '',\n                    password: '',\n                }\n            )\n\n        } catch (error) {\n            console.log('Error creation',error)\n        }\n\n    }\n\n    const handleUserInput = (e) => {\n\n        // ? Name attribute in input allows getting the proper input\n        // console.log(`INPUT NAME: `, e.target.name)\n\n        // ? Copy UserInput, Then change one property\n        // ? (Will modify not add if new property would have been in spread)\n        setuserInput(\n            {\n                ...userInput,\n                [e.target.name]: e.target.value,\n            }\n        )\n\n    }\n\n    return (\n\n        <form\n            className=\"form sign-up\"\n            onSubmit={handleSignUp}\n        >\n\n            <h2>Time to feel like home</h2>\n\n            <FormInput\n                name='name'\n                type='text'\n                handleChange={handleUserInput}\n                value={userInput.name}\n                label='Name'\n                required\n            />\n\n            <FormInput\n                name='email'\n                type='email'\n                handleChange={handleUserInput}\n                value={userInput.email}\n                label='Email'\n                required\n            />\n\n            <FormInput\n                name='password'\n                type='password'\n                handleChange={handleUserInput}\n                value={userInput.password}\n                label='Password'\n                required\n            />\n\n            {/* <FormInput\n                name='confirmPassword'\n                type='password'\n                handleChange={handleUserInput}\n                value={userInput.password}\n                label='Confirm Password'\n                required\n            /> */}\n\n            <button type=\"button\" className=\"submit\" onClick={handleSignUp}>Sign Up</button>\n            <button onClick={() => { let a; }} type=\"button\" className=\"loginBtn loginBtn--google\">Join with <span>Google</span></button>\n\n            {/* <input type=\"submit\" value=\"Submit Form\" /> */}\n\n        </form>\n\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}