{"ast":null,"code":"import { ShopActionTypes } from './shop-types';\nimport { firestore, convertCollectionSnapShotToMap } from '../../components/config/firebase/firebase-util'; // ? Switches Reducer fetching state\n\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // ? With thunk middleware enabled, any dispatch of a function instead of an object will \n// ? be given dispatch as it's' first argument. Dealing with async code using redux\n\nexport const fetchCollectionsStartAsync = () => {\n  // ? Thunks are just functions that return a function with access to dispatch\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapShotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/shop/shop-actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapShotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,gDAA1D,C,CAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADnB,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AAEvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAFiC;AAGvDC,EAAAA,OAAO,EAAEF;AAH8C,CAApB,CAAhC;AAQP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AAEtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAFgC;AAGtDH,EAAAA,OAAO,EAAEE;AAH6C,CAAnB,CAAhC,C,CAOP;AACA;;AACA,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAE5C;AACA,SAAOC,QAAQ,IAAI;AAEf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,YAAMC,cAAc,GAAGlB,8BAA8B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,cAAD,CAAxB,CAAR;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAD,CAAxB,CAL5B;AAOH,GAZD;AAaH,CAhBM","sourcesContent":["import { ShopActionTypes } from './shop-types'\nimport { firestore, convertCollectionSnapShotToMap } from '../../components/config/firebase/firebase-util'\n\n// ? Switches Reducer fetching state\nexport const fetchCollectionsStart = () => {\n    return {\n        type: ShopActionTypes.FETCH_COLLECTIONS_START,\n    }\n}\n\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n\n})\n\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n\n})\n\n// ? With thunk middleware enabled, any dispatch of a function instead of an object will \n// ? be given dispatch as it's' first argument. Dealing with async code using redux\nexport const fetchCollectionsStartAsync = () => {\n\n    // ? Thunks are just functions that return a function with access to dispatch\n    return dispatch => {\n\n        const collectionRef = firestore.collection('collections')\n        dispatch(fetchCollectionsStart())\n\n        collectionRef.get()\n            .then(snapshot => {\n                const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n                dispatch(fetchCollectionsSuccess(collectionsMap))\n            })\n            .catch(error => dispatch(fetchCollectionsFailure(error)))\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}