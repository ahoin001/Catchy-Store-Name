{"ast":null,"code":"// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'; // ? Input selector getting the state of cart \n// ? State passed to selector will reference here\n// const selectCart = state => state.cartDropDown;\n\nconst selectVisibility = state => state.cartDropDown.hideCart;\n\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector([selectList], //? Input selector being referenced\n// ? Recieves input selector output as argument\ncartList => {\n  console.log(`Select cart selector:`, cartList);\n  return cartList;\n});\nexport const selectCartItemsCount = createSelector([selectList], selectCartList => {\n  const totalCount = selectCartList.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n  console.log(`Cart items count selcetor:`, totalCount);\n  return selectCartList.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n});\nexport const selectCartTotal = createSelector([selectList], selectCartList => {\n  const totalPrice = selectCartList.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity * currentValue.price;\n  }, 0);\n  console.log(`Cart total Price selcetor:`, totalPrice);\n  return totalPrice;\n});\nexport const selectCartVisibility = createSelector([selectVisibility], selectCartVisibility => {\n  console.log(`Cart Visibility selector:`, selectCartVisibility);\n  return selectCartVisibility;\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/selectors/cart.js"],"names":["createSelector","selectVisibility","state","cartDropDown","hideCart","selectList","cartItems","selectCartItems","cartList","console","log","selectCartItemsCount","selectCartList","totalCount","reduce","accumulator","currentValue","quantity","selectCartTotal","totalPrice","price","selectCartVisibility"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,QAArD;;AACA,MAAMC,UAAU,GAAGH,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBG,SAA/C;;AAEA,OAAO,MAAMC,eAAe,GAAGP,cAAc,CACzC,CAACK,UAAD,CADyC,EAC3B;AACd;AACCG,QAAD,IAAc;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb,EAAqCF,QAArC;AACA,SAAOA,QAAP;AACH,CANwC,CAAtC;AASP,OAAO,MAAMG,oBAAoB,GAAGX,cAAc,CAC9C,CAACK,UAAD,CAD8C,EAE7CO,cAAD,IAAoB;AAChB,QAAMC,UAAU,GAAGD,cAAc,CAACE,MAAf,CAAsB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACpE,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFkB,EAEhB,CAFgB,CAAnB;AAGAR,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb,EAA0CG,UAA1C;AACA,SAAOD,cAAc,CAACE,MAAf,CAAsB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACxD,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAV6C,CAA3C;AAaP,OAAO,MAAMC,eAAe,GAAGlB,cAAc,CACzC,CAACK,UAAD,CADyC,EAExCO,cAAD,IAAoB;AAChB,QAAMO,UAAU,GAAGP,cAAc,CAACE,MAAf,CAAsB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACpE,WAAOD,WAAW,GAAIC,YAAY,CAACC,QAAb,GAAwBD,YAAY,CAACI,KAA3D;AACH,GAFkB,EAEhB,CAFgB,CAAnB;AAGAX,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb,EAA0CS,UAA1C;AAEA,SAAOA,UAAP;AACH,CATwC,CAAtC;AAYP,OAAO,MAAME,oBAAoB,GAAGrB,cAAc,CAC9C,CAACC,gBAAD,CAD8C,EAE7CoB,oBAAD,IAA0B;AACtBZ,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb,EAAyCW,oBAAzC;AACA,SAAOA,oBAAP;AACH,CAL6C,CAA3C","sourcesContent":["// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'\n\n// ? Input selector getting the state of cart \n// ? State passed to selector will reference here\n// const selectCart = state => state.cartDropDown;\nconst selectVisibility = state => state.cartDropDown.hideCart;\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector(\n    [selectList], //? Input selector being referenced\n    // ? Recieves input selector output as argument\n    (cartList) => {\n        console.log(`Select cart selector:`, cartList)\n        return cartList\n    }\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectList],\n    (selectCartList) => {\n        const totalCount = selectCartList.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n        console.log(`Cart items count selcetor:`, totalCount)\n        return selectCartList.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n)\n\nexport const selectCartTotal = createSelector(\n    [selectList],\n    (selectCartList) => {\n        const totalPrice = selectCartList.reduce((accumulator, currentValue) => {\n            return accumulator + (currentValue.quantity * currentValue.price)\n        }, 0)\n        console.log(`Cart total Price selcetor:`, totalPrice)\n\n        return totalPrice\n    }\n)\n\nexport const selectCartVisibility = createSelector(\n    [selectVisibility],\n    (selectCartVisibility) => {\n        console.log(`Cart Visibility selector:`, selectCartVisibility)\n        return selectCartVisibility\n    }\n)\n\n"]},"metadata":{},"sourceType":"module"}