{"ast":null,"code":"// import CartItem from \"../../components/cart/cart-item/cart-item\";\nexport const addItemToCart = (cartItems, itemBeingAdded) => {\n  const exsistingCartItem = cartItems.find(cartItem => cartItem.id === itemBeingAdded.id);\n\n  if (exsistingCartItem) {\n    // ? Return updated cartlist\n    return cartItems.map(cartItem => {\n      // ? Return cartItem as object , with Increase qunatity of item\n      return cartItem.id === itemBeingAdded.id ? { ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem;\n    });\n  } // ? When the function first excecutes and there is no exsisting items, attatch quantity property\n\n\n  return [...cartItems, { ...itemBeingAdded,\n    quantity: 1\n  }];\n};\nexport const removeItemInCheckout = (cartItems, itemBeingRemoved) => {\n  const exsistingCartItem = cartItems.find(cartItem => cartItem.id === itemBeingRemoved.id);\n\n  if (exsistingCartItem.quantity === 1) {\n    cartItems.reduce((accumulator, currentItem) => {\n      if (currentItem.id !== exsistingCartItem.id) {\n        const itemBeingKept = { ...currentItem\n        };\n        accumulator.push(itemBeingKept);\n      }\n\n      return accumulator;\n    }, []);\n  } // ? When the function first excecutes and there is no exsisting items, attatch quantity property\n\n\n  return [...cartItems];\n};","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/cart-util.js"],"names":["addItemToCart","cartItems","itemBeingAdded","exsistingCartItem","find","cartItem","id","map","quantity","removeItemInCheckout","itemBeingRemoved","reduce","accumulator","currentItem","itemBeingKept","push"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AAExD,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EADrB,CAA1B;;AAIA,MAAIH,iBAAJ,EAAuB;AAEnB;AACA,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAc;AAE/B;AACA,aAAOA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAA/B,GACH,EAAE,GAAGD,QAAL;AAAeG,QAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,OADG,GAEHH,QAFJ;AAGH,KANM,CAAP;AAUH,GAnBuD,CAqBxD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,cAAL;AAAqBM,IAAAA,QAAQ,EAAE;AAA/B,GAAf,CAAP;AAEH,CAxBM;AA0BP,OAAO,MAAMC,oBAAoB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAEjE,QAAMP,iBAAiB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADvB,CAA1B;;AAIA,MAAIH,iBAAiB,CAACK,QAAlB,KAA+B,CAAnC,EAAsC;AAElCP,IAAAA,SAAS,CAACU,MAAV,CAAiB,CAACC,WAAD,EAAcC,WAAd,KAA8B;AAC3C,UAAKA,WAAW,CAACP,EAAZ,KAAmBH,iBAAiB,CAACG,EAA1C,EAA+C;AAE3C,cAAMQ,aAAa,GAAG,EAAE,GAAGD;AAAL,SAAtB;AACAD,QAAAA,WAAW,CAACG,IAAZ,CAAiBD,aAAjB;AAEH;;AACD,aAAOF,WAAP;AACH,KARD,EAQG,EARH;AAUH,GAlBgE,CAoBjE;;;AACA,SAAO,CAAC,GAAGX,SAAJ,CAAP;AAEH,CAvBM","sourcesContent":["// import CartItem from \"../../components/cart/cart-item/cart-item\";\n\nexport const addItemToCart = (cartItems, itemBeingAdded) => {\n\n    const exsistingCartItem = cartItems.find(\n        cartItem => cartItem.id === itemBeingAdded.id\n    );\n\n    if (exsistingCartItem) {\n\n        // ? Return updated cartlist\n        return cartItems.map((cartItem) => {\n\n            // ? Return cartItem as object , with Increase qunatity of item\n            return cartItem.id === itemBeingAdded.id ?\n                { ...cartItem, quantity: cartItem.quantity + 1 } :\n                cartItem\n        }\n\n        )\n\n    }\n\n    // ? When the function first excecutes and there is no exsisting items, attatch quantity property\n    return [...cartItems, { ...itemBeingAdded, quantity: 1 }]\n\n}\n\nexport const removeItemInCheckout = (cartItems, itemBeingRemoved) => {\n\n    const exsistingCartItem = cartItems.find(\n        cartItem => cartItem.id === itemBeingRemoved.id\n    );\n\n    if (exsistingCartItem.quantity === 1) {\n\n        cartItems.reduce((accumulator, currentItem) => {\n            if ((currentItem.id !== exsistingCartItem.id)) {\n\n                const itemBeingKept = { ...currentItem }\n                accumulator.push(itemBeingKept)\n\n            }\n            return accumulator;\n        }, []);\n\n    }\n\n    // ? When the function first excecutes and there is no exsisting items, attatch quantity property\n    return [...cartItems]\n\n}\n"]},"metadata":{},"sourceType":"module"}