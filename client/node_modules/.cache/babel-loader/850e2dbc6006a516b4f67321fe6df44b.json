{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/with-spinner/with-spinner.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner-styles'; // ? HOC that will display loading screen if the component is not ready to be rendered\n// ? WithSpinner takes a component I want to wrap, then passes it to another component that will wrap and use it in someway\n\nconst WithSpinner = WrappedComponent => {\n  // ? Deconstructs props from passed component\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/with-spinner/with-spinner.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD,C,CAEA;AAEA;;AACA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AAEtC;AACA,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAD,KAAkC;AAE9C,WAAOD,SAAS,gBACZ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADY,gBAOR,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPR;AAUH,GAZD;;AAcA,SAAOF,OAAP;AAEH,CAnBD;;AAqBA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner-styles'\n\n// ? HOC that will display loading screen if the component is not ready to be rendered\n\n// ? WithSpinner takes a component I want to wrap, then passes it to another component that will wrap and use it in someway\nconst WithSpinner = (WrappedComponent) => {\n\n    // ? Deconstructs props from passed component\n    const Spinner = ({ isLoading, ...otherProps }) => {\n\n        return isLoading ? (\n            <SpinnerOverlay>\n                <SpinnerContainer />\n            </SpinnerOverlay>\n        )\n            :\n            (\n                <WrappedComponent {...otherProps} />\n            )\n\n    };\n\n    return Spinner\n\n}\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}