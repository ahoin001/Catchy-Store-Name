{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectCollectionIsFetching } from '../../redux/shop/shop-selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport './shop.scss';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // ? Shop component is nested in a route (check App.js) Route passes map, location and history props\n\nconst Shop = ({\n  match\n}) => {\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    isFetchingCollections: state => selectCollectionIsFetching(state)\n  });\n  const {\n    isFetchingCollections\n  } = useSelector(structuredSelector);\n  const dispatch = useDispatch();\n  const fetchCollectionsAsyncAction = React.useCallback(() => dispatch(fetchCollectionsStartAsync()), [dispatch]); // ? Hit Firebase to make sure Firebase Collection gives us most recent store collection inventory \n\n  useEffect(() => {\n    let unsubscribeFromSnapShot;\n\n    const getShopData = () => {\n      fetchCollectionsAsyncAction(); // unsubscribeFromSnapShot = null;\n      // const collectionRef = firestore.collection('collections')\n      // collectionRef.get()\n      //     .then(snapshot => {\n      //         const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n      //         updateCollectionsAction(collectionsMap)\n      //         setdisplayLoaingSpinner(false)\n      //     })\n    };\n\n    getShopData(); // return () => {\n    //     unsubscribeFromSnapShot()\n    // }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'shop-page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isFetchingCollections\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isFetchingCollections\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","useEffect","Route","useDispatch","useSelector","createStructuredSelector","fetchCollectionsStartAsync","selectCollectionIsFetching","WithSpinner","CollectionPage","CollectionsOverview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","match","structuredSelector","isFetchingCollections","state","dispatch","fetchCollectionsAsyncAction","useCallback","unsubscribeFromSnapShot","getShopData","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AAEA,OAAO,aAAP;AAIA,MAAMC,6BAA6B,GAAGH,WAAW,CAACE,mBAAD,CAAjD;AACA,MAAME,yBAAyB,GAAGJ,WAAW,CAACC,cAAD,CAA7C,C,CAEA;;AACA,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAExB;AACA,QAAMC,kBAAkB,GAAGV,wBAAwB,CAAC;AAChDW,IAAAA,qBAAqB,EAAGC,KAAD,IAAWV,0BAA0B,CAACU,KAAD;AADZ,GAAD,CAAnD;AAIA,QAAM;AAAED,IAAAA;AAAF,MAA4BZ,WAAW,CAACW,kBAAD,CAA7C;AAEA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,2BAA2B,GAAGnB,KAAK,CAACoB,WAAN,CAChC,MAAMF,QAAQ,CAACZ,0BAA0B,EAA3B,CADkB,EAEhC,CAACY,QAAD,CAFgC,CAApC,CAXwB,CAkBxB;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIoB,uBAAJ;;AAEA,UAAMC,WAAW,GAAG,MAAM;AAEtBH,MAAAA,2BAA2B,GAFL,CAItB;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEH,KAfD;;AAiBAG,IAAAA,WAAW,GArBC,CAuBZ;AACA;AACA;AAEH,GA3BQ,EA2BN,EA3BM,CAAT;AA+BA,sBAEI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAER,KAAK,CAACS,IAAK,EAFxB;AAGI,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAER;AAA1C,OAAqEQ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAUI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,gBADxB;AAEI,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAER;AAAtC,OAAiEQ,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAFJ;AAqBH,CAvED;;AAyEA,eAAeX,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions'\nimport { selectCollectionIsFetching } from '../../redux/shop/shop-selectors'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nimport CollectionPage from '../collection/collection'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\n\nimport './shop.scss'\n\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// ? Shop component is nested in a route (check App.js) Route passes map, location and history props\nconst Shop = ({ match }) => {\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        isFetchingCollections: (state) => selectCollectionIsFetching(state)\n    })\n\n    const { isFetchingCollections } = useSelector(structuredSelector);\n\n    const dispatch = useDispatch();\n  \n    const fetchCollectionsAsyncAction = React.useCallback(\n        () => dispatch(fetchCollectionsStartAsync()),\n        [dispatch]\n    )\n\n\n\n    // ? Hit Firebase to make sure Firebase Collection gives us most recent store collection inventory \n    useEffect(() => {\n\n        let unsubscribeFromSnapShot;\n\n        const getShopData = () => {\n\n            fetchCollectionsAsyncAction()\n\n            // unsubscribeFromSnapShot = null;\n\n            // const collectionRef = firestore.collection('collections')\n\n            // collectionRef.get()\n            //     .then(snapshot => {\n            //         const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n            //         updateCollectionsAction(collectionsMap)\n            //         setdisplayLoaingSpinner(false)\n            //     })\n\n        }\n\n        getShopData();\n\n        // return () => {\n        //     unsubscribeFromSnapShot()\n        // }\n\n    }, [])\n\n\n\n    return (\n\n        <div className={'shop-page'}>\n\n            {/* Match path will be current nested components route, so /shop */}\n            {/* Render accepts function that I use to pass props and a component */}\n            <Route\n                exact\n                path={`${match.path}`}\n                render={(props) => <CollectionOverviewWithSpinner isLoading={isFetchingCollections} {...props} />}\n            />\n\n            <Route\n                path={`${match.path}/:collectionId`}\n                render={(props) => <CollectionPageWithSpinner isLoading={isFetchingCollections} {...props} />}\n            />\n\n        </div>\n    );\n\n\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}