{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/collection/collection-container.jsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\nimport Collection from './collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nconst CollectionsContainer = props => {\n  const structuredSelector = createStructuredSelector({\n    isLoadingCollections: state => !selectIsCollectionsLoaded(state)\n  });\n  const {\n    isLoadingCollections\n  } = useSelector(structuredSelector);\n  console.log(`$$$$$$$$$$$$$$$$$$$: `, isLoadingCollections); // const dispatch = useDispatch();\n  // const fetchCollectionsAsyncAction = React.useCallback(\n  //     () => dispatch(fetchCollectionsStart()),\n  //     [dispatch]\n  // )\n  // // ? Async actions to firebase to get store data\n  // useEffect(() => {\n  //     const getShopData = () => {\n  //         fetchCollectionsAsyncAction()\n  //     }\n  //     getShopData();\n  // }, [])\n\n  return /*#__PURE__*/React.createElement(Collection, Object.assign({\n    isLoading: !isLoadingCollections\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default WithSpinner(CollectionsContainer);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/collection/collection-container.jsx"],"names":["React","useSelector","createStructuredSelector","selectIsCollectionsLoaded","Collection","WithSpinner","CollectionsContainer","props","structuredSelector","isLoadingCollections","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,QAAMC,kBAAkB,GAAGN,wBAAwB,CAAC;AAChDO,IAAAA,oBAAoB,EAAGC,KAAD,IAAW,CAACP,yBAAyB,CAACO,KAAD;AADX,GAAD,CAAnD;AAIA,QAAM;AAAED,IAAAA;AAAF,MAA2BR,WAAW,CAACO,kBAAD,CAA5C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb,EAAqCH,oBAArC,EAPoC,CAQpC;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAGA,sBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,CAACA;AAAxB,KAAkDF,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAIH,CAjCD;;AAmCA,eAAeF,WAAW,CAACC,oBAAD,CAA1B","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors'\n\nimport Collection from './collection'\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nconst CollectionsContainer = (props) => {\n\n    const structuredSelector = createStructuredSelector({\n        isLoadingCollections: (state) => !selectIsCollectionsLoaded(state)\n    })\n\n    const { isLoadingCollections } = useSelector(structuredSelector);\n    console.log(`$$$$$$$$$$$$$$$$$$$: `, isLoadingCollections)\n    // const dispatch = useDispatch();\n\n    // const fetchCollectionsAsyncAction = React.useCallback(\n    //     () => dispatch(fetchCollectionsStart()),\n    //     [dispatch]\n    // )\n\n    // // ? Async actions to firebase to get store data\n    // useEffect(() => {\n\n    //     const getShopData = () => {\n\n    //         fetchCollectionsAsyncAction()\n\n    //     }\n\n    //     getShopData();\n\n    // }, [])\n\n\n    return (\n        <Collection isLoading={!isLoadingCollections} {...props} />\n    )\n\n};\n\nexport default WithSpinner(CollectionsContainer);"]},"metadata":{},"sourceType":"module"}