{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport lodash from 'lodash';\nimport { setCurrentUser } from \"./redux/user/user-actions\";\nimport { selectCollectionsForPreview, selectCollectionsIsFetching } from \"./redux/shop/shop-selectors\";\nimport { selectUserStatus } from './redux/user/selectors/user-selectors';\nimport HomePage from \"./pages/homepage/HomePage\";\nimport Shop from './pages/shop/Shop';\nimport UserAuth from './pages/user-handling/User-Auth';\nimport Checkout from './pages/checkout/checkout';\nimport Header from './components/navigation/Header';\nimport { auth, createUserProfileDocument } from './components/config/firebase/firebase-util';\nimport './App.css';\n\nconst App = () => {\n  const structuredSelector = createStructuredSelector({\n    currentUser: state => selectUserStatus(state),\n    shop: state => selectCollectionsForPreview(state)\n  });\n  const {\n    currentUser,\n    shop\n  } = useSelector(structuredSelector, lodash.isEqual);\n  console.log(`!!!!!!!!!!!!!!!!!!!!!! : `, shop);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let unsubscribeFromAuth = null;\n    let unsubscribeFromSnapShot = null;\n\n    const getUser = async () => {\n      // https://firebase.google.com/docs/auth/web/manage-users?authuser=0\n      // ? From auth library, This open subscription stays open as long as this component is mounted\n      // ? onAuthStateChanged will set observer to keep track of user state activity (Listens to any user sign in changes across our firebase project and will update if our user is signed in or signed out)\n      // ? It also returns an unsubscribe function that I will use when component unmounts\n      // userAuth argument is given by onauth user state\n      unsubscribeFromAuth = await auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth); // ? set listener for any changes of data at that ref, and also first gets the original state of it to set data\n\n          unsubscribeFromSnapShot = userRef.onSnapshot(snapShot => {\n            dispatch(setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n            }));\n          });\n        } else {\n          // console.log(userAuth)\n          // ? set current user to null (onAuth will return null if user signs out )\n          dispatch(setCurrentUser(userAuth));\n        }\n      });\n    };\n\n    getUser(); // ? unsub when component unmounts\n\n    return () => {\n      unsubscribeFromAuth();\n      unsubscribeFromSnapShot();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(UserAuth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: Shop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: Checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Icons made by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.flaticon.com/authors/freepik\",\n    title: \"Freepik\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }\n  }, \"Freepik\"), \" from \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.flaticon.com/\",\n    title: \"Flaticon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 110\n    }\n  }, \"www.flaticon.com\")));\n};\n\nexport default connect()(App);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","useSelector","useDispatch","createStructuredSelector","lodash","setCurrentUser","selectCollectionsForPreview","selectCollectionsIsFetching","selectUserStatus","HomePage","Shop","UserAuth","Checkout","Header","auth","createUserProfileDocument","App","structuredSelector","currentUser","state","shop","isEqual","console","log","dispatch","unsubscribeFromAuth","unsubscribeFromSnapShot","getUser","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,2BAAT,EAAqCC,2BAArC,QAAwE,6BAAxE;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,4CAAhD;AAIA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,kBAAkB,GAAGd,wBAAwB,CAAC;AAClDe,IAAAA,WAAW,EAAGC,KAAD,IAAWX,gBAAgB,CAACW,KAAD,CADU;AAElDC,IAAAA,IAAI,EAAGD,KAAD,IAAWb,2BAA2B,CAACa,KAAD;AAFM,GAAD,CAAnD;AAKA,QAAM;AAAED,IAAAA,WAAF;AAAcE,IAAAA;AAAd,MAAuBnB,WAAW,CAACgB,kBAAD,EAAqBb,MAAM,CAACiB,OAA5B,CAAxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb,EAAwCH,IAAxC;AAEA,QAAMI,QAAQ,GAAGtB,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAI6B,mBAAmB,GAAG,IAA1B;AACA,QAAIC,uBAAuB,GAAG,IAA9B;;AAEA,UAAMC,OAAO,GAAG,YAAY;AAE1B;AACA;AACA;AACA;AAEA;AACAF,MAAAA,mBAAmB,GAAG,MAAMX,IAAI,CAACc,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AAEtE,YAAIA,QAAJ,EAAc;AAEZ,gBAAMC,OAAO,GAAG,MAAMf,yBAAyB,CAACc,QAAD,CAA/C,CAFY,CAIZ;;AACAH,UAAAA,uBAAuB,GAAGI,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAEzDR,YAAAA,QAAQ,CAACnB,cAAc,CAAC;AAEtB4B,cAAAA,EAAE,EAAED,QAAQ,CAACC,EAFS;AAGtB,iBAAGD,QAAQ,CAACE,IAAT;AAHmB,aAAD,CAAf,CAAR;AAOD,WATyB,CAA1B;AAaD,SAlBD,MAkBO;AACL;AACA;AACAV,UAAAA,QAAQ,CAACnB,cAAc,CAAEwB,QAAF,CAAf,CAAR;AACD;AAEF,OA1B2B,CAA5B;AA4BD,KApCD;;AAsCAF,IAAAA,OAAO,GA3CO,CA6Cd;;AACA,WAAO,MAAM;AACXF,MAAAA,mBAAmB;AACnBC,MAAAA,uBAAuB;AACxB,KAHD;AAKD,GAnDQ,EAmDN,EAnDM,CAAT;AAsDA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AACQ,IAAA,IAAI,EAAC,GADb;AAEE,IAAA,SAAS,EAAEjB,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AACQ,IAAA,IAAI,EAAC,SADb;AAEE,IAAA,MAAM,EAAE,MAAMS,WAAW,gBACvB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,gBAEvB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAER,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAwBE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AACQ,IAAA,IAAI,EAAC,WADb;AAEE,IAAA,SAAS,EAAEE,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CALF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAG,IAAA,IAAI,EAAC,0CAAR;AAAmD,IAAA,KAAK,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAnB,yBAAuG;AAAG,IAAA,IAAI,EAAC,2BAAR;AAAoC,IAAA,KAAK,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAvG,CArCF,CAFF;AA2CD,CA7GD;;AA+GA,eAAeZ,OAAO,GAAGgB,GAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport lodash from 'lodash'\n\nimport { setCurrentUser } from \"./redux/user/user-actions\";\nimport { selectCollectionsForPreview,selectCollectionsIsFetching } from \"./redux/shop/shop-selectors\";\nimport { selectUserStatus } from './redux/user/selectors/user-selectors'\n\nimport HomePage from \"./pages/homepage/HomePage\";\nimport Shop from './pages/shop/Shop';\nimport UserAuth from './pages/user-handling/User-Auth';\nimport Checkout from './pages/checkout/checkout'\n\nimport Header from './components/navigation/Header';\nimport { auth, createUserProfileDocument } from './components/config/firebase/firebase-util'\n\n\n\nimport './App.css'\n\nconst App = () => {\n\n  const structuredSelector = createStructuredSelector({\n    currentUser: (state) => selectUserStatus(state),\n    shop: (state) => selectCollectionsForPreview(state)\n  })\n\n  const { currentUser,shop } = useSelector(structuredSelector, lodash.isEqual)\n  console.log(`!!!!!!!!!!!!!!!!!!!!!! : `,shop)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n\n    let unsubscribeFromAuth = null;\n    let unsubscribeFromSnapShot = null;\n\n    const getUser = async () => {\n\n      // https://firebase.google.com/docs/auth/web/manage-users?authuser=0\n      // ? From auth library, This open subscription stays open as long as this component is mounted\n      // ? onAuthStateChanged will set observer to keep track of user state activity (Listens to any user sign in changes across our firebase project and will update if our user is signed in or signed out)\n      // ? It also returns an unsubscribe function that I will use when component unmounts\n\n      // userAuth argument is given by onauth user state\n      unsubscribeFromAuth = await auth.onAuthStateChanged(async (userAuth) => {\n\n        if (userAuth) {\n\n          const userRef = await createUserProfileDocument(userAuth)\n\n          // ? set listener for any changes of data at that ref, and also first gets the original state of it to set data\n          unsubscribeFromSnapShot = userRef.onSnapshot((snapShot) => {\n\n            dispatch(setCurrentUser({\n\n              id: snapShot.id,\n              ...snapShot.data()\n\n            }))\n\n          })\n\n\n\n        } else {\n          // console.log(userAuth)\n          // ? set current user to null (onAuth will return null if user signs out )\n          dispatch(setCurrentUser((userAuth)))\n        }\n\n      })\n\n    }\n\n    getUser();\n\n    // ? unsub when component unmounts\n    return () => {\n      unsubscribeFromAuth();\n      unsubscribeFromSnapShot();\n    }\n\n  }, [])\n\n\n  return (\n\n    <div className=\"App\">\n\n      {/* Place Header here so it persists above all components rendered by switch */}\n      <Header />\n\n      <Switch>\n\n        <Route\n          exact path=\"/\"\n          component={HomePage}\n        >\n\n        </Route>\n\n        <Route\n          exact path=\"/signin\"\n          render={() => currentUser ?\n            <Redirect to='/' /> :\n            <UserAuth />}\n        >\n        </Route>\n\n        <Route\n          path=\"/shop\"\n          component={Shop}\n        >\n\n        </Route>\n\n        <Route\n          exact path=\"/checkout\"\n          component={Checkout}\n        >\n\n        </Route>\n\n      </Switch>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n    </div>\n\n  );\n};\n\nexport default connect()(App);"]},"metadata":{},"sourceType":"module"}