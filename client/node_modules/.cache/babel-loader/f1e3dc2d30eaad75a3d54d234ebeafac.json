{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsFetchingCollections, selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionPageContainer from '../collection/collection-container';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview-container';\nimport './shop.scss'; // ? Shop component is nested in a route (check App.js) Route passes map, location and history props\n\nconst Shop = ({\n  match\n}) => {\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    isFetchingCollections: state => selectIsFetchingCollections(state),\n    isCollectionsLoaded: state => selectIsCollectionsLoaded(state)\n  });\n  const {\n    isFetchingCollections,\n    isCollectionsLoaded\n  } = useSelector(structuredSelector);\n  const dispatch = useDispatch();\n  const fetchCollectionsAsyncAction = React.useCallback(() => dispatch(fetchCollectionsStartAsync()), [dispatch]); // ? Hit Firebase when component mounts to make sure Firebase Collection gives us most recent store collections \n\n  useEffect(() => {\n    const getShopData = () => {\n      fetchCollectionsAsyncAction();\n    };\n\n    getShopData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'shop-page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","useEffect","Route","useDispatch","useSelector","createStructuredSelector","fetchCollectionsStartAsync","selectIsFetchingCollections","selectIsCollectionsLoaded","WithSpinner","CollectionPageContainer","CollectionsOverviewContainer","Shop","match","structuredSelector","isFetchingCollections","state","isCollectionsLoaded","dispatch","fetchCollectionsAsyncAction","useCallback","getShopData","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,2BAAT,EAAsCC,yBAAtC,QAAuE,iCAAvE;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AAEA,OAAO,aAAP,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAExB;AACA,QAAMC,kBAAkB,GAAGT,wBAAwB,CAAC;AAChDU,IAAAA,qBAAqB,EAAGC,KAAD,IAAWT,2BAA2B,CAACS,KAAD,CADb;AAEhDC,IAAAA,mBAAmB,EAAGD,KAAD,IAAWR,yBAAyB,CAACQ,KAAD;AAFT,GAAD,CAAnD;AAKA,QAAM;AAAED,IAAAA,qBAAF;AAAyBE,IAAAA;AAAzB,MAAiDb,WAAW,CAACU,kBAAD,CAAlE;AAEA,QAAMI,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,2BAA2B,GAAGnB,KAAK,CAACoB,WAAN,CAChC,MAAMF,QAAQ,CAACZ,0BAA0B,EAA3B,CADkB,EAEhC,CAACY,QAAD,CAFgC,CAApC,CAZwB,CAmBxB;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMoB,WAAW,GAAG,MAAM;AAEtBF,MAAAA,2BAA2B;AAE9B,KAJD;;AAMAE,IAAAA,WAAW;AAEd,GAVQ,EAUN,EAVM,CAAT;AAcA,sBAEI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAER,KAAK,CAACS,IAAK,EAFxB;AAGI,IAAA,SAAS,EAAEX,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAWI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACS,IAAK,gBADxB;AAEI,IAAA,SAAS,EAAEZ,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAFJ;AAsBH,CAxDD;;AA0DA,eAAeE,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions'\nimport { selectIsFetchingCollections, selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nimport CollectionPageContainer from '../collection/collection-container'\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview-container';\n\nimport './shop.scss'\n\n// ? Shop component is nested in a route (check App.js) Route passes map, location and history props\nconst Shop = ({ match }) => {\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        isFetchingCollections: (state) => selectIsFetchingCollections(state),\n        isCollectionsLoaded: (state) => selectIsCollectionsLoaded(state)\n    })\n\n    const { isFetchingCollections, isCollectionsLoaded } = useSelector(structuredSelector);\n\n    const dispatch = useDispatch();\n\n    const fetchCollectionsAsyncAction = React.useCallback(\n        () => dispatch(fetchCollectionsStartAsync()),\n        [dispatch]\n    )\n\n\n\n    // ? Hit Firebase when component mounts to make sure Firebase Collection gives us most recent store collections \n    useEffect(() => {\n\n        const getShopData = () => {\n\n            fetchCollectionsAsyncAction()\n\n        }\n\n        getShopData();\n\n    }, [])\n\n\n\n    return (\n\n        <div className={'shop-page'}>\n\n            {/* Match path will be current nested components route, so /shop */}\n            {/* Render accepts function that I use to pass props and a component */}\n            <Route\n                exact\n                path={`${match.path}`}\n                component={CollectionsOverviewContainer}\n\n            />\n\n            <Route\n                path={`${match.path}/:collectionId`}\n                component={CollectionPageContainer}\n            />\n\n        </div>\n    );\n\n\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}