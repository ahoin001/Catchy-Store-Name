{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { firestore, convertCollectionSnapShotToMap } from '../../components/config/firebase/firebase-util';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport './shop.scss'; // ? Shop component is nested in a route (check App.js) Route passes map, location and history props\n\nconst Shop = ({\n  match\n}) => {\n  const [LoaingSpinner, setLoaingSpinner] = useState(true);\n  const dispatch = useDispatch();\n  const updateCollectionsAction = React.useCallback(collection => dispatch(updateCollections(collection)), [dispatch]);\n  useEffect(() => {\n    const getShopData = () => {\n      let unsubscribeFromSnapShot = null;\n      const collectionRef = firestore.collection('collections'); // ? Whenever collection updates or is initialized , return snapshot object of collectionRef\n\n      unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionSnapShotToMap(snapshot); // console.log('MAPPED OBJECT %%%%%%%%',collectionsMap)\n\n        updateCollectionsAction(collectionsMap);\n        setLoaingSpinner(false);\n      });\n    };\n\n    getShopData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'shop-page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","useEffect","useState","Route","useDispatch","firestore","convertCollectionSnapShotToMap","updateCollections","WithSpinner","CollectionPage","CollectionsOverview","Shop","match","LoaingSpinner","setLoaingSpinner","dispatch","updateCollectionsAction","useCallback","collection","getShopData","unsubscribeFromSnapShot","collectionRef","onSnapshot","snapshot","collectionsMap","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,gDAA1D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AAGA,OAAO,aAAP,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAExB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,uBAAuB,GAAGhB,KAAK,CAACiB,WAAN,CAC3BC,UAAD,IAAgBH,QAAQ,CAACR,iBAAiB,CAACW,UAAD,CAAlB,CADI,EAE5B,CAACH,QAAD,CAF4B,CAAhC;AAKAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMkB,WAAW,GAAG,MAAM;AAEtB,UAAIC,uBAAuB,GAAG,IAA9B;AAEA,YAAMC,aAAa,GAAGhB,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB,CAJsB,CAMtB;;AACAE,MAAAA,uBAAuB,GAAGC,aAAa,CAACC,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAEjE,cAAMC,cAAc,GAAGlB,8BAA8B,CAACiB,QAAD,CAArD,CAFiE,CAGjE;;AACAP,QAAAA,uBAAuB,CAACQ,cAAD,CAAvB;AACAV,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,OANyB,CAA1B;AAQH,KAfD;;AAiBAK,IAAAA,WAAW;AAEd,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBAEI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEP,KAAK,CAACa,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEf,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACa,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ;AAaH,CA9CD;;AAgDA,eAAeE,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { firestore, convertCollectionSnapShotToMap } from '../../components/config/firebase/firebase-util'\n\nimport { updateCollections } from '../../redux/shop/shop-actions'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner'\nimport CollectionPage from '../collection/collection'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\n\n\nimport './shop.scss'\n\n// ? Shop component is nested in a route (check App.js) Route passes map, location and history props\nconst Shop = ({ match }) => {\n\n    const [LoaingSpinner, setLoaingSpinner] = useState(true)\n\n    const dispatch = useDispatch();\n    const updateCollectionsAction = React.useCallback(\n        (collection) => dispatch(updateCollections(collection)),\n        [dispatch]\n    )\n\n    useEffect(() => {\n\n        const getShopData = () => {\n\n            let unsubscribeFromSnapShot = null;\n\n            const collectionRef = firestore.collection('collections')\n\n            // ? Whenever collection updates or is initialized , return snapshot object of collectionRef\n            unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n\n                const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n                // console.log('MAPPED OBJECT %%%%%%%%',collectionsMap)\n                updateCollectionsAction(collectionsMap)\n                setLoaingSpinner(false)\n            })\n\n        }\n\n        getShopData();\n\n    }, [])\n\n    return (\n\n        <div className={'shop-page'}>\n\n            {/* Match path will be current nested components route, so /shop */}\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\n\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n\n        </div>\n    );\n\n\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}