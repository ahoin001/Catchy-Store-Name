{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../components/config/firebase/firebase-util';\nimport { googleSignInSuccess, googleSignInFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    // ? Extract user object from auth object \n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log(`###### `, user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get(); // ? Use user Data to create action with user Object as payload\n    // ? put sends return object back to redux flow\n\n    yield put(googleSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // ? Export Sagas to root rootSaga\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","user","signInWithPopup","console","log","userRef","userSnapShot","get","id","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,gDAAhE;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAEA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAuBH,IAAvB;AAEA,UAAMI,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMK,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAPA,CASA;AACA;;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAC1BU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF;AAFuB,KAAD,CAApB,CAAT;AAKH,GAhBD,CAgBE,OAAOG,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACQ,mBAAmB,CAACU,KAAD,CAApB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACH,C,CAED;;AACA,OAAO,UAAUY,SAAV,GAAsB;AAEzB,QAAMpB,GAAG,CAAC,CACNC,IAAI,CAACiB,mBAAD,CADE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user-types'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../components/config/firebase/firebase-util'\n\nimport {\n    googleSignInSuccess,\n    googleSignInFailure\n} from './user-actions'\n\nexport function* signInWithGoogle() {\n\n    try {\n\n        // ? Extract user object from auth object \n        const { user } = yield auth.signInWithPopup(googleProvider);\n        console.log(`###### `, user)\n\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapShot = yield userRef.get();\n\n        // ? Use user Data to create action with user Object as payload\n        // ? put sends return object back to redux flow\n        yield put(googleSignInSuccess({\n            id: userSnapShot.id,\n            ...userSnapShot\n        }))\n\n    } catch (error) {\n        yield put(googleSignInFailure(error))\n    }\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n// ? Export Sagas to root rootSaga\nexport function* userSagas() {\n\n    yield all([\n        call(onGoogleSignInStart)\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}