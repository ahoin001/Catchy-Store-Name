{"ast":null,"code":"import UserActionTypes from './user-types'; // ? Action Creator functions to have reusable action objects format for different action types\n// ? In this case I provide a user as payload for the action\n\nexport const googleSignInStart = () => {\n  return {\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n  };\n};\nexport const emailSignInStart = emailAndPassword => {\n  return {\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload: emailAndPassword\n  };\n};\nexport const signInFailure = error => {\n  return {\n    type: UserActionTypes.SIGN_IN_FAILURE,\n    payload: error\n  };\n};\nexport const signInSuccess = user => {\n  return {\n    type: UserActionTypes.SIGN_IN_SUCCESS,\n    payload: user\n  };\n};\nexport const checkUserSession = () => {\n  return {\n    type: UserActionTypes.CHECK_USER_SESSION\n  };\n};","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/user/user-actions.js"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","payload","signInFailure","error","SIGN_IN_FAILURE","signInSuccess","user","SIGN_IN_SUCCESS","checkUserSession","CHECK_USER_SESSION"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEF,eAAe,CAACG;AADnB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,gBAAD,IAAsB;AAClD,SAAO;AACHH,IAAAA,IAAI,EAAEF,eAAe,CAACM,mBADnB;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AACpC,SAAO;AACHP,IAAAA,IAAI,EAAEF,eAAe,CAACU,eADnB;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHV,IAAAA,IAAI,EAAEF,eAAe,CAACa,eADnB;AAEHN,IAAAA,OAAO,EAAEK;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHZ,IAAAA,IAAI,EAAEF,eAAe,CAACe;AADnB,GAAP;AAGH,CAJM","sourcesContent":["import UserActionTypes from './user-types'\n\n// ? Action Creator functions to have reusable action objects format for different action types\n// ? In this case I provide a user as payload for the action\n\nexport const googleSignInStart = () => {\n    return {\n        type: UserActionTypes.GOOGLE_SIGN_IN_START\n    }\n}\n\nexport const emailSignInStart = (emailAndPassword) => {\n    return {\n        type: UserActionTypes.EMAIL_SIGN_IN_START,\n        payload: emailAndPassword\n    }\n}\n\nexport const signInFailure = (error) => {\n    return {\n        type: UserActionTypes.SIGN_IN_FAILURE,\n        payload: error\n    }\n}\n\nexport const signInSuccess = (user) => {\n    return {\n        type: UserActionTypes.SIGN_IN_SUCCESS,\n        payload: user\n    }\n}\n\nexport const checkUserSession = () => {\n    return {\n        type: UserActionTypes.CHECK_USER_SESSION,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}