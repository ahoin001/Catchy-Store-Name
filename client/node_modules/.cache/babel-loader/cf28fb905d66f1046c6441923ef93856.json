{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/cart/cart-icon/cart-icon.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTotalItems } from '../../../redux/cart-dropdown/selectors/cart-items';\nimport { toggleCartDisplay } from '../../../redux/cart-dropdown/cart-dropdown-actions';\nimport { ReactComponent as ShoppingCartIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/shoppingbag.svg\";\nimport './cart-icon.scss';\n\nconst CartIcon = () => {\n  // ************************************************************\n  // * Started using react-redux hooks instead of connnect\n  // ************************************************************\n  const totalItems = useSelector(state => getTotalItems(state));\n  const dispatch = useDispatch();\n  console.log(\"Cart Icon rendering. (SHOULD NOT ONLY OCCUR AFTER APP STARTS WHEN ADDING OR REMOVING ITEMS< TANKS TO USESELECTOR\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: () => dispatch(toggleCartDisplay()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    className: \"shopping-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, totalItems));\n}; // ? Deconstruct to get nested property value from state object recieved by connect\n// const mapStateToProps = ({ cartDropDown: { cartItems } }) => {\n//     console.log(`I HAVE BEEN CALLED`)\n//     return {\n//         totalItems: cartItems.reduce((accumulator, currentValue) => {\n//             return accumulator + currentValue.quantity\n//         }, 0)\n//     }\n// }\n\n\nexport default CartIcon;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/cart/cart-icon/cart-icon.jsx"],"names":["React","useSelector","useDispatch","getTotalItems","toggleCartDisplay","CartIcon","totalItems","state","dispatch","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,iBAAT,QAAkC,oDAAlC;;AAIA,OAAO,kBAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAGnB;AACA;AACA;AAEA,QAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWJ,aAAa,CAACI,KAAD,CAAzB,CAA9B;AAEA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,kHAAZ;AAEA,sBAGI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACJ,iBAAiB,EAAlB,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BE,UAA9B,CANJ,CAHJ;AAcH,CA3BD,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getTotalItems } from '../../../redux/cart-dropdown/selectors/cart-items'\nimport { toggleCartDisplay } from '../../../redux/cart-dropdown/cart-dropdown-actions'\n\nimport { ReactComponent as ShoppingCartIcon } from \"../../../assets/shoppingbag.svg\";\n\nimport './cart-icon.scss'\n\nconst CartIcon = () => {\n\n\n    // ************************************************************\n    // * Started using react-redux hooks instead of connnect\n    // ************************************************************\n\n    const totalItems = useSelector((state) => getTotalItems(state))\n\n    const dispatch = useDispatch()\n\n    console.log(\"Cart Icon rendering. (SHOULD NOT ONLY OCCUR AFTER APP STARTS WHEN ADDING OR REMOVING ITEMS< TANKS TO USESELECTOR\");\n\n    return (\n\n\n        <div\n            className=\"cart-icon\"\n            onClick={() => dispatch(toggleCartDisplay())}\n        >\n\n            <ShoppingCartIcon className=\"shopping-icon\" />\n            <span className=\"item-count\">{totalItems}</span>\n\n        </div>\n    );\n\n};\n\n// ? Deconstruct to get nested property value from state object recieved by connect\n// const mapStateToProps = ({ cartDropDown: { cartItems } }) => {\n//     console.log(`I HAVE BEEN CALLED`)\n//     return {\n//         totalItems: cartItems.reduce((accumulator, currentValue) => {\n//             return accumulator + currentValue.quantity\n//         }, 0)\n//     }\n\n// }\n\nexport default CartIcon;    "]},"metadata":{},"sourceType":"module"}