{"ast":null,"code":"// ! Reducers should not mutate state, but return a value of mutated state instead\n// Will hold all reducers we imported, to avoid one massive file\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\"; // Gets local storage from browser\n\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from './user/user-reducer';\nimport cartDropDownReducer from './cart-dropdown/cart-dropdown-reducer'; // * REMEMBER WHEN STATE IS MODIFIED IN THE REDUCERS THE MODIFIED STATE IS RETURNED TO THE STORE\n// * NEVER MODIFY STATE DIRECTLY\n\nexport default combineReducers({\n  user: userReducer,\n  cartDropDown: cartDropDownReducer\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartDropDownReducer","user","cartDropDown"],"mappings":"AAAA;AAEA;AACA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC,C,CAEA;AACA;;AACA,eAAeJ,eAAe,CAC1B;AACIK,EAAAA,IAAI,EAAEF,WADV;AAEIG,EAAAA,YAAY,EAAEF;AAFlB,CAD0B,CAA9B","sourcesContent":["// ! Reducers should not mutate state, but return a value of mutated state instead\n\n// Will hold all reducers we imported, to avoid one massive file\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\n\n// Gets local storage from browser\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from './user/user-reducer'\nimport cartDropDownReducer from './cart-dropdown/cart-dropdown-reducer'\n\n// * REMEMBER WHEN STATE IS MODIFIED IN THE REDUCERS THE MODIFIED STATE IS RETURNED TO THE STORE\n// * NEVER MODIFY STATE DIRECTLY\nexport default combineReducers(\n    {\n        user: userReducer,\n        cartDropDown: cartDropDownReducer\n    }\n)"]},"metadata":{},"sourceType":"module"}