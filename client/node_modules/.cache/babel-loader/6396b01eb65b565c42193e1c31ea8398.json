{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/directory/Directory.jsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectStoreSections } from '../../redux/directory/directory-selectors';\nimport MenuItem from '../menu-item/MenuItem';\nimport './directory.styles.scss';\n\nconst Directory = () => {\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    departments: state => selectStoreSections(state)\n  });\n  const {\n    departments\n  } = useSelector(structuredSelector);\n  const menuItems = departments.map(({\n    id,\n    ...departmentProps\n  }) => {\n    // ? ES6 trick: props is an object, so shorthand syntax where key and value have same name is possible\n    // ? Ex: { title: \"variableNamedtitle\" } can be { title }\n    // ? Used here to shorthand passing props\n    return /*#__PURE__*/React.createElement(MenuItem, Object.assign({\n      key: id\n    }, departmentProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"directory-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, menuItems);\n};\n\nexport default Directory;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/directory/Directory.jsx"],"names":["React","useSelector","createStructuredSelector","selectStoreSections","MenuItem","Directory","structuredSelector","departments","state","menuItems","map","id","departmentProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,mBAAT,QAAoC,2CAApC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAO,yBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB;AACA,QAAMC,kBAAkB,GAAGJ,wBAAwB,CAAC;AAChDK,IAAAA,WAAW,EAAGC,KAAD,IAAWL,mBAAmB,CAACK,KAAD;AADK,GAAD,CAAnD;AAIA,QAAM;AAAED,IAAAA;AAAF,MAAkBN,WAAW,CAACK,kBAAD,CAAnC;AAEA,QAAMG,SAAS,GAAGF,WAAW,CAACG,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,EAAF;AAAM,OAAGC;AAAT,GAAD,KAAgC;AAE9D;AACA;AACA;AAEA,wBAAO,oBAAC,QAAD;AACH,MAAA,GAAG,EAAED;AADF,OAECC,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAKH,GAXiB,CAAlB;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,SADL,CADJ;AAOH,CA7BD;;AA+BA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectStoreSections } from '../../redux/directory/directory-selectors'\nimport MenuItem from '../menu-item/MenuItem';\n\nimport './directory.styles.scss'\n\nconst Directory = () => {\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        departments: (state) => selectStoreSections(state)\n    })\n\n    const { departments } = useSelector(structuredSelector);\n\n    const menuItems = departments.map(({ id, ...departmentProps }) => {\n\n        // ? ES6 trick: props is an object, so shorthand syntax where key and value have same name is possible\n        // ? Ex: { title: \"variableNamedtitle\" } can be { title }\n        // ? Used here to shorthand passing props\n\n        return <MenuItem\n            key={id}\n            {...departmentProps}\n        />\n\n    })\n\n    return (\n        <div className=\"directory-menu\">\n            {menuItems}\n        </div>\n    );\n\n\n};\n\nexport default Directory;"]},"metadata":{},"sourceType":"module"}