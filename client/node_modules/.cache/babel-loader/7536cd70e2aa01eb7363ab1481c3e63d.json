{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/navigation/Header.jsx\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { auth } from '../config/firebase/firebase-util';\nimport { useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartVisibility } from '../../redux/cart-dropdown/selectors/cart';\nimport { selectUserStatus } from '../../redux/user/selectors/user-selectors';\nimport * as Styled from './header-styles'; // ? Necesssary naming to import svg file\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/logo.svg\";\nimport CartIcon from '../cart/cart-icon/cart-icon';\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\nimport lodash from 'lodash';\nimport './header-styles.scss';\n\nconst Header = () => {\n  // const currentUser = useSelector((state) => selectUserStatus(state), lodash.isEqual)\n  // ? When not memoized, this selector will run no matter what dispatch action ocurs\n  // const cartDropdownHidden = useSelector((state) => \n  // {\n  //  console.log('Cart Visible Selector')   \n  //  return state.cartDropDown.hideCart },lodash.isEqual)\n  // ? Reselect(npm) lets us create memoized selectors, so useSelector won't run \n  // ? unless it's computed output is the same as before the action dispatched\n  // ? (Will still rerender if parent rerenders unless using connect or React.memo)\n  // const cartDropdownHidden = useSelector((state) => selectCartVisibility(state), lodash.isEqual)\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    currentUser: state => selectUserStatus(state),\n    cartDropdownHidden: state => selectCartVisibility(state)\n  });\n  const {\n    currentUser,\n    cartDropdownHidden\n  } = useSelector(structuredSelector, lodash.isEqual);\n\n  const signOut = async () => {\n    await auth.signOut();\n  };\n\n  return /*#__PURE__*/React.createElement(Styled.HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Styled.StyledLink, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Styled.LogoContainer, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Link, {\n    className: \"link\",\n    to: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"SHOP\"), /*#__PURE__*/React.createElement(Styled.Link, {\n    className: \"link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Contact\"), currentUser ? /*#__PURE__*/React.createElement(Styled.StyledLinkDiv, {\n    className: \"link\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(Styled.Link, {\n    className: \"link\",\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), cartDropdownHidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default React.memo(Header);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/navigation/Header.jsx"],"names":["React","Link","auth","useSelector","createStructuredSelector","selectCartVisibility","selectUserStatus","Styled","CartIcon","CartDropdown","lodash","Header","structuredSelector","currentUser","state","cartDropdownHidden","isEqual","signOut","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,gBAAT,QAAiC,2CAAjC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB,C,CACA;;;AAGA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,QAAMC,kBAAkB,GAAGR,wBAAwB,CAAC;AAChDS,IAAAA,WAAW,EAAGC,KAAD,IAAWR,gBAAgB,CAACQ,KAAD,CADQ;AAEhDC,IAAAA,kBAAkB,EAAGD,KAAD,IAAWT,oBAAoB,CAACS,KAAD;AAFH,GAAD,CAAnD;AAKA,QAAM;AAAED,IAAAA,WAAF;AAAeE,IAAAA;AAAf,MAAsCZ,WAAW,CAACS,kBAAD,EAAqBF,MAAM,CAACM,OAA5B,CAAvD;;AAEA,QAAMC,OAAO,GAAG,YAAY;AACxB,UAAMf,IAAI,CAACe,OAAL,EAAN;AACH,GAFD;;AAIA,sBACI,oBAAC,MAAD,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD,CAAQ,UAAR;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,EAAE,EAAC,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,MAAD,CAAQ,aAAR;AAAsB,IAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,eAUI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAA8B,IAAA,EAAE,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAA8B,IAAA,EAAE,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAYQJ,WAAW,gBACP,oBAAC,MAAD,CAAQ,aAAR;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAEI,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBAQP,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,SAAS,EAAC,MAAvB;AAA8B,IAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBZ,eA0BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CAVJ,EAyCQF,kBAAkB,GACd,IADc,gBAEd,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CZ,CADJ;AAiDH,CA5ED;;AA8EA,eAAef,KAAK,CAACkB,IAAN,CAAWP,MAAX,CAAf","sourcesContent":["import React from 'react';\n\nimport { Link } from \"react-router-dom\";\nimport { auth } from '../config/firebase/firebase-util'\nimport { useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { selectCartVisibility } from '../../redux/cart-dropdown/selectors/cart'\nimport { selectUserStatus } from '../../redux/user/selectors/user-selectors'\n\nimport * as Styled from './header-styles'\n// ? Necesssary naming to import svg file\nimport { ReactComponent as Logo } from '../../assets/logo.svg'\n\nimport CartIcon from '../cart/cart-icon/cart-icon'\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\n\nimport lodash from 'lodash'\n\nimport './header-styles.scss'\n\nconst Header = () => {\n\n    // const currentUser = useSelector((state) => selectUserStatus(state), lodash.isEqual)\n\n    // ? When not memoized, this selector will run no matter what dispatch action ocurs\n    // const cartDropdownHidden = useSelector((state) => \n    // {\n    //  console.log('Cart Visible Selector')   \n    //  return state.cartDropDown.hideCart },lodash.isEqual)\n\n    // ? Reselect(npm) lets us create memoized selectors, so useSelector won't run \n    // ? unless it's computed output is the same as before the action dispatched\n    // ? (Will still rerender if parent rerenders unless using connect or React.memo)\n    // const cartDropdownHidden = useSelector((state) => selectCartVisibility(state), lodash.isEqual)\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        currentUser: (state) => selectUserStatus(state),\n        cartDropdownHidden: (state) => selectCartVisibility(state)\n    })\n\n    const { currentUser, cartDropdownHidden } = useSelector(structuredSelector, lodash.isEqual);\n\n    const signOut = async () => {\n        await auth.signOut();\n    }\n\n    return (\n        <Styled.HeaderContainer>\n\n            <Styled.StyledLink\n                className=\"logo-container\"\n                to=\"/\"\n            >\n                <Styled.LogoContainer className=\"logo\" />\n\n            </Styled.StyledLink>\n\n            <div className=\"nav-links\">\n\n                <Styled.Link className=\"link\" to=\"/shop\">\n                    SHOP\n                </Styled.Link>\n\n                <Styled.Link className=\"link\" to=\"/\">\n                    Contact\n                </Styled.Link>\n\n                {\n\n                    currentUser ?\n                        <Styled.StyledLinkDiv\n                            className=\"link\"\n                            onClick={signOut}\n                        >\n                            SIGN OUT\n                        </Styled.StyledLinkDiv>\n                        :\n                        <Styled.Link className=\"link\" to=\"/signin\">\n                            SIGN IN\n                        </Styled.Link>\n\n                }\n\n                <CartIcon />\n\n            </div>\n\n            {\n                cartDropdownHidden ?\n                    null :\n                    <CartDropdown />\n            }\n\n        </Styled.HeaderContainer>\n    );\n};\n\nexport default React.memo(Header);"]},"metadata":{},"sourceType":"module"}