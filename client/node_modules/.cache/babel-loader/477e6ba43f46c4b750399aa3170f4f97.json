{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/navigation/Header.jsx\";\nimport React from 'react';\nimport { Link, withRouter } from \"react-router-dom\"; // HOF that allows component to access redux store and dispatch actions\n\nimport { connect, useSelector } from 'react-redux';\nimport { auth } from '../config/firebase/firebase-util'; // ? Necesssary naming to import svg file\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/logo.svg\";\nimport CartIcon from '../cart/cart-icon/cart-icon';\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\nimport lodash from 'lodash';\nimport './header-styles.scss';\n\nconst Header = props => {\n  const currentUser = useSelector(state => {\n    console.log(state.user.currentUser);\n    return state.user.currentUser;\n  }, lodash.isEqual);\n  const cartDropdownHidden = useSelector(state => {\n    return state.cartDropDown.hideCart;\n  }); // console.log(`PROPS FROM HEADER: `, props)\n\n  const signOut = async () => {\n    await auth.signOut().then(() => props.history.push('/'));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    to: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"SHOP\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Contact\"), currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), cartDropdownHidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }));\n}; // state argument will be supplied by connect (the root reducer in the redux setup)\n// ? this will take currentUser value from state and provide it to this component as a prop\n// const mapStateToProps = (state) => (\n//     // ? This object will be spread to props object and available for connected connected component\n//     {\n//         currentUser: state.user.currentUser,\n//         cartDropdownHidden: state.cartDropDown.hideCart\n//     }\n// )\n// Syntax is excecutinng connect, and then passing wrapped header into that retruned function as a argument for use again\n\n\nexport default connect()(withRouter(Header));","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/navigation/Header.jsx"],"names":["React","Link","withRouter","connect","useSelector","auth","CartIcon","CartDropdown","lodash","Header","props","currentUser","state","console","log","user","isEqual","cartDropdownHidden","cartDropDown","hideCart","signOut","then","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,IAAT,QAAqB,kCAArB,C,CAEA;;;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,WAAW,GAAGP,WAAW,CAAEQ,KAAD,IAAW;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,CAAWJ,WAAvB;AACA,WAAOC,KAAK,CAACG,IAAN,CAAWJ,WAAlB;AACH,GAH8B,EAG7BH,MAAM,CAACQ,OAHsB,CAA/B;AAKA,QAAMC,kBAAkB,GAAGb,WAAW,CAAEQ,KAAD,IAAW;AAC9C,WAAOA,KAAK,CAACM,YAAN,CAAmBC,QAA1B;AACH,GAFqC,CAAtC,CAPsB,CAWtB;;AAEA,QAAMC,OAAO,GAAG,YAAY;AACxB,UAAMf,IAAI,CAACe,OAAL,GACDC,IADC,CACI,MAAMX,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CADV,CAAN;AAEH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,EAAE,EAAC,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,eAUI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAYQZ,WAAW,gBACP;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAES,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBAQP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBZ,eA0BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CAVJ,EAyCQH,kBAAkB,GACd,IADc,gBAEd,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CZ,CADJ;AAkDH,CArED,C,CAuEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AACA,eAAed,OAAO,GAAGD,UAAU,CAACO,MAAD,CAAb,CAAtB","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\n// HOF that allows component to access redux store and dispatch actions\nimport { connect, useSelector } from 'react-redux'\nimport { auth } from '../config/firebase/firebase-util'\n\n// ? Necesssary naming to import svg file\nimport { ReactComponent as Logo } from '../../assets/logo.svg'\nimport CartIcon from '../cart/cart-icon/cart-icon'\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\n\nimport lodash from 'lodash'\n\nimport './header-styles.scss'\n\nconst Header = (props) => {\n\n    const currentUser = useSelector((state) => {\n        console.log(state.user.currentUser)\n        return state.user.currentUser\n    },lodash.isEqual)\n\n    const cartDropdownHidden = useSelector((state) => {\n        return state.cartDropDown.hideCart\n    })\n\n    // console.log(`PROPS FROM HEADER: `, props)\n\n    const signOut = async () => {\n        await auth.signOut()\n            .then(() => props.history.push('/'))\n    }\n\n\n    return (\n        <div className=\"header\">\n\n            <Link\n                className=\"logo-container\"\n                to=\"/\"\n            >\n                <Logo className=\"logo\" />\n\n            </Link>\n\n            <div className=\"nav-links\">\n\n                <Link className=\"link\" to=\"/shop\">\n                    SHOP\n                </Link>\n\n                <Link className=\"link\" to=\"/\">\n                    Contact\n                </Link>\n\n                {\n\n                    currentUser ?\n                        <div\n                            className=\"link\"\n                            onClick={signOut}\n                        >\n                            SIGN OUT\n                        </div>\n                        :\n                        <Link className=\"link\" to=\"/signin\">\n                            SIGN IN\n                        </Link>\n\n                }\n\n                <CartIcon />\n\n            </div>\n\n            {\n                cartDropdownHidden ?\n                    null :\n                    <CartDropdown />\n            }\n\n\n        </div>\n    );\n};\n\n// state argument will be supplied by connect (the root reducer in the redux setup)\n// ? this will take currentUser value from state and provide it to this component as a prop\n// const mapStateToProps = (state) => (\n\n//     // ? This object will be spread to props object and available for connected connected component\n//     {\n//         currentUser: state.user.currentUser,\n//         cartDropdownHidden: state.cartDropDown.hideCart\n//     }\n\n// )\n\n// Syntax is excecutinng connect, and then passing wrapped header into that retruned function as a argument for use again\nexport default connect()(withRouter(Header));"]},"metadata":{},"sourceType":"module"}