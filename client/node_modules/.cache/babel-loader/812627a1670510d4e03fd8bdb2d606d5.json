{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setCurrentUserAction } from \"./redux/user/user-actions\";\nimport HomePage from \"./pages/homepage/HomePage\";\nimport Shop from './pages/shop/Shop';\nimport UserAuth from './pages/user-handling/User-Auth';\nimport Header from './components/navigation/Header';\nimport { auth } from './components/config/firebase/firebase-util';\nimport './App.css';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    let unsubscribeFromAuth; // ? This open subscription stays open as long as this component is mounted\n\n    const getUser = async () => {\n      // https://firebase.google.com/docs/auth/web/manage-users?authuser=0\n      // ? onAuthStateChanged will set observer to keep track of user state activity (Listens to any user sign in changes across our firebase project and will update if our user is signed in or signed out)\n      // ? It also returns an unsubscribe function that I will use when component unmounts\n      // user parameter is given by auth user state\n      unsubscribeFromAuth = await auth.onAuthStateChanged(user => {\n        setCurrentUser(user);\n        console.log(user);\n      });\n    };\n\n    getUser(); // ? unsub when component unmounts\n\n    return () => {\n      unsubscribeFromAuth();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HomePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Shop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Icons made by \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.flaticon.com/authors/freepik\",\n    title: \"Freepik\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }\n  }, \"Freepik\"), \" from \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.flaticon.com/\",\n    title: \"Flaticon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 110\n    }\n  }, \"www.flaticon.com\")));\n}; // ? argument provided by connect\n\n\nconst mapDispatchtoProps = dispatch => {\n  // ? Dispatch excecutes imported action creatorr function with user argument and returns the action object for dispatch excecution\n  return {\n    // User\n    setCurrentUser: user => dispatch(setCurrentUserAction(user))\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(App);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/App.js"],"names":["React","useState","useEffect","Switch","Route","connect","setCurrentUserAction","HomePage","Shop","UserAuth","Header","auth","App","currentUser","setCurrentUser","unsubscribeFromAuth","getUser","onAuthStateChanged","user","console","log","mapDispatchtoProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,2BAArC;AAGA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,IAAT,QAAqB,4CAArB;AAGA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIa,mBAAJ,CAFc,CAId;;AACA,UAAMC,OAAO,GAAG,YAAY;AAE1B;AACA;AACA;AAGA;AACAD,MAAAA,mBAAmB,GAAG,MAAMJ,IAAI,CAACM,kBAAL,CAAyBC,IAAD,IAAU;AAE5DJ,QAAAA,cAAc,CAACI,IAAD,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAJ2B,CAA5B;AAKD,KAbD;;AAeAF,IAAAA,OAAO,GApBO,CAsBd;;AACA,WAAO,MAAM;AACXD,MAAAA,mBAAmB;AACpB,KAFD;AAID,GA3BQ,EA2BN,EA3BM,CAAT;AA8BA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CALF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAG,IAAA,IAAI,EAAC,0CAAR;AAAmD,IAAA,KAAK,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAnB,yBAAuG;AAAG,IAAA,IAAI,EAAC,2BAAR;AAAoC,IAAA,KAAK,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAvG,CApBF,CAFF;AA0BD,CA5DD,C,CA8DA;;;AACA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AAEvC;AACA,SAAO;AAEL;AACAR,IAAAA,cAAc,EAAGI,IAAD,IAAUI,QAAQ,CAAChB,oBAAoB,CAACY,IAAD,CAArB;AAH7B,GAAP;AAQD,CAXD;;AAcA,eAAeb,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiCT,GAAjC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport { setCurrentUserAction } from \"./redux/user/user-actions\";\n\n\nimport HomePage from \"./pages/homepage/HomePage\";\nimport Shop from './pages/shop/Shop';\nimport UserAuth from './pages/user-handling/User-Auth';\n\nimport Header from './components/navigation/Header';\nimport { auth } from './components/config/firebase/firebase-util'\n\n\nimport './App.css'\n\nconst App = () => {\n\n  const [currentUser, setCurrentUser] = useState()\n\n  useEffect(() => {\n\n    let unsubscribeFromAuth;\n\n    // ? This open subscription stays open as long as this component is mounted\n    const getUser = async () => {\n\n      // https://firebase.google.com/docs/auth/web/manage-users?authuser=0\n      // ? onAuthStateChanged will set observer to keep track of user state activity (Listens to any user sign in changes across our firebase project and will update if our user is signed in or signed out)\n      // ? It also returns an unsubscribe function that I will use when component unmounts\n\n\n      // user parameter is given by auth user state\n      unsubscribeFromAuth = await auth.onAuthStateChanged((user) => {\n\n        setCurrentUser(user)\n        console.log(user)\n      })\n    }\n\n    getUser();\n\n    // ? unsub when component unmounts\n    return () => {\n      unsubscribeFromAuth();\n    }\n\n  }, [])\n\n\n  return (\n\n    <div className=\"App\">\n\n      {/* Place Header here so it persists above all components rendered by switch */}\n      <Header />\n\n      <Switch>\n\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/signin\">\n          <UserAuth />\n        </Route>\n\n        <Route path=\"/shop\">\n          <Shop />\n        </Route>\n\n      </Switch>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n    </div>\n\n  );\n};\n\n// ? argument provided by connect\nconst mapDispatchtoProps = (dispatch) => {\n\n  // ? Dispatch excecutes imported action creatorr function with user argument and returns the action object for dispatch excecution\n  return {\n  \n    // User\n    setCurrentUser: (user) => dispatch(setCurrentUserAction(user))  \n\n    \n  }\n\n}\n\n\nexport default connect(null,mapDispatchtoProps)(App);"]},"metadata":{},"sourceType":"module"}