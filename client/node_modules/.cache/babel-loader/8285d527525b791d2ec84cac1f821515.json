{"ast":null,"code":"// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'; // ? Input selector getting the state of cart \n// ? State passed to selector will reference here\n\nconst selectCart = state => state.cartDropDown;\n\nconst selectVisibility = state => state.cartDropDown.hideCart;\n\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector([selectList], //? Input selector being referenced\n// ? Recieves input selector output as argument\ncartList => {\n  console.log(`Select cart selector:`, cartList);\n  return cartList;\n});\nexport const selectCartItemsCount = createSelector([selectList], selectCartList => {\n  const total = selectCartList.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n  console.log(`Cart items count selcetor:`, total);\n  return selectCartList.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n});\nexport const selectCartVisibility = createSelector([selectVisibility], selectCartVisibility => {\n  console.log(`Cart Visibility selcetor:`, selectCartVisibility);\n  return selectCartVisibility;\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/selectors/cart.js"],"names":["createSelector","selectCart","state","cartDropDown","selectVisibility","hideCart","selectList","cartItems","selectCartItems","cartList","console","log","selectCartItemsCount","selectCartList","total","reduce","accumulator","currentValue","quantity","selectCartVisibility"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAlC;;AACA,MAAMC,gBAAgB,GAAGF,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBE,QAArD;;AACA,MAAMC,UAAU,GAAGJ,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBI,SAA/C;;AAEA,OAAO,MAAMC,eAAe,GAAGR,cAAc,CACzC,CAACM,UAAD,CADyC,EAC3B;AACd;AACCG,QAAD,IAAc;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb,EAAqCF,QAArC;AACA,SAAOA,QAAP;AACH,CANwC,CAAtC;AASP,OAAO,MAAMG,oBAAoB,GAAGZ,cAAc,CAC9C,CAACM,UAAD,CAD8C,EAE7CO,cAAD,IAAoB;AAChB,QAAMC,KAAK,GAAGD,cAAc,CAACE,MAAf,CAAsB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAC/D,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFa,EAEX,CAFW,CAAd;AAGAR,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb,EAA0CG,KAA1C;AACA,SAAOD,cAAc,CAACE,MAAf,CAAsB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACxD,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAV6C,CAA3C;AAaP,OAAO,MAAMC,oBAAoB,GAAGnB,cAAc,CAC9C,CAACI,gBAAD,CAD8C,EAE7Ce,oBAAD,IAA0B;AACtBT,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb,EAAyCQ,oBAAzC;AACA,SAAOA,oBAAP;AACH,CAL6C,CAA3C","sourcesContent":["// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'\n\n// ? Input selector getting the state of cart \n// ? State passed to selector will reference here\nconst selectCart = state => state.cartDropDown;\nconst selectVisibility = state => state.cartDropDown.hideCart;\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector(\n    [selectList], //? Input selector being referenced\n    // ? Recieves input selector output as argument\n    (cartList) => {\n        console.log(`Select cart selector:`, cartList)\n        return cartList\n    }\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectList],\n    (selectCartList) => {\n        const total = selectCartList.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n        console.log(`Cart items count selcetor:`, total)\n        return selectCartList.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n)\n\nexport const selectCartVisibility = createSelector(\n    [selectVisibility],\n    (selectCartVisibility) => {\n        console.log(`Cart Visibility selcetor:`, selectCartVisibility)\n        return selectCartVisibility\n    }\n)\n"]},"metadata":{},"sourceType":"module"}