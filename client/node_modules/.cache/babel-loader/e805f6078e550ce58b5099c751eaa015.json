{"ast":null,"code":"// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'; // ? Input selector getting the state of cart \n\nconst selectCart = state => state.cartDropDown; // ? Memo Example\n\n\nexport const selectCartItems = createSelector([selectCart], //? Input selector\n// ? Recieves input selector output as argument\ncartDropDown => {\n  return cartDropDown.cartItems.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n});\nexport const getTotalItems = state => {\n  return state.cartDropDown.cartItems.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n};","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/selectors/cart-items.js"],"names":["createSelector","selectCart","state","cartDropDown","selectCartItems","cartItems","reduce","accumulator","currentValue","quantity","getTotalItems"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAC3B;AACd;AACCE,YAAD,IAAkB;AACd,SAAOA,YAAY,CAACE,SAAb,CAAuBC,MAAvB,CAA8B,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAChE,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAPwC,CAAtC;AAUP,OAAO,MAAMC,aAAa,GAAIR,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,YAAN,CAAmBE,SAAnB,CAA6BC,MAA7B,CAAoC,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACtE,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAJM","sourcesContent":["// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'\n\n// ? Input selector getting the state of cart \nconst selectCart = state => state.cartDropDown;\n\n// ? Memo Example\nexport const selectCartItems = createSelector(\n    [selectCart], //? Input selector\n    // ? Recieves input selector output as argument\n    (cartDropDown) => {\n        return cartDropDown.cartItems.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n)\n\nexport const getTotalItems = (state) => {\n    return state.cartDropDown.cartItems.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.quantity\n    }, 0)\n}\n"]},"metadata":{},"sourceType":"module"}