{"ast":null,"code":"// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'; // ? Input selector getting the state of cart \n// ? State passed tp selector will reference here\n\nconst selectCart = state => state.cartDropDown;\n\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector([selectCart], //? Input selector being referenced\n// ? Recieves input selector output as argument\ncartDropDown => {\n  console.log(`Select cart selector:`, cartDropDown.cartItems);\n  return cartDropDown.cartItems;\n});\nexport const selectCartItemsCount = createSelector([selectList], selectCart => {\n  const total = selectCart.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n  console.log(`Cart items count selcetor:`, total);\n  return selectCart.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n});\nexport const selectCartVisibility = createSelector([selectCart], cartDropDown => {\n  console.log(`Cart Visibility selcetor:`, cartDropDown.hideCart);\n  return cartDropDown.hideCart;\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/selectors/cart.js"],"names":["createSelector","selectCart","state","cartDropDown","selectList","cartItems","selectCartItems","console","log","selectCartItemsCount","total","reduce","accumulator","currentValue","quantity","selectCartVisibility","hideCart"],"mappings":"AAAA;AACA;AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAlC;;AACA,MAAMC,UAAU,GAAGF,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBE,SAA/C;;AAEA,OAAO,MAAMC,eAAe,GAAGN,cAAc,CACzC,CAACC,UAAD,CADyC,EAC3B;AACd;AACCE,YAAD,IAAkB;AACdI,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb,EAAqCL,YAAY,CAACE,SAAlD;AACA,SAAOF,YAAY,CAACE,SAApB;AACH,CANwC,CAAtC;AASP,OAAO,MAAMI,oBAAoB,GAAGT,cAAc,CAC9C,CAACI,UAAD,CAD8C,EAE7CH,UAAD,IAAgB;AACZ,QAAMS,KAAK,GAAGT,UAAU,CAACU,MAAX,CAAkB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAC3D,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFa,EAEX,CAFW,CAAd;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb,EAA0CE,KAA1C;AACA,SAAOT,UAAU,CAACU,MAAX,CAAkB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACpD,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAV6C,CAA3C;AAaP,OAAO,MAAMC,oBAAoB,GAAGf,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE7CE,YAAD,IAAkB;AACdI,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb,EAAyCL,YAAY,CAACa,QAAtD;AACA,SAAOb,YAAY,CAACa,QAApB;AACH,CAL6C,CAA3C","sourcesContent":["// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'\n\n// ? Input selector getting the state of cart \n// ? State passed tp selector will reference here\nconst selectCart = state => state.cartDropDown;\nconst selectList = state => state.cartDropDown.cartItems;\n\nexport const selectCartItems = createSelector(\n    [selectCart], //? Input selector being referenced\n    // ? Recieves input selector output as argument\n    (cartDropDown) => {\n        console.log(`Select cart selector:`, cartDropDown.cartItems)\n        return cartDropDown.cartItems\n    }\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectList],\n    (selectCart) => {\n        const total = selectCart.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n        console.log(`Cart items count selcetor:`, total)\n        return selectCart.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n)\n\nexport const selectCartVisibility = createSelector(\n    [selectCart],\n    (cartDropDown) => {\n        console.log(`Cart Visibility selcetor:`, cartDropDown.hideCart)\n        return cartDropDown.hideCart\n    }\n)\n"]},"metadata":{},"sourceType":"module"}