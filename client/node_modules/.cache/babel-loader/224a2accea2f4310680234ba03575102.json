{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/navigation/Header.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartVisibility } from '../../redux/cart-dropdown/selectors/cart';\nimport { selectUserStatus } from '../../redux/user/selectors/user-selectors';\nimport { signOutStart } from '../../redux/user/user-actions';\nimport { HeaderContainer, LogoContainer, NavLinksContainer, StyledLink } from './header-styles'; // ? Necesssary naming to import svg file\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/logo.svg\";\nimport CartIcon from '../cart/cart-icon/cart-icon';\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\nimport lodash from 'lodash';\n\nconst Header = () => {\n  // ? When not memoized, this selector will run no matter what dispatch action ocurs\n  // const cartDropdownHidden = useSelector((state) => \n  // {\n  //  console.log('Cart Visible Selector')   \n  //  return state.cartDropDown.hideCart },lodash.isEqual)\n  // ? Reselect(npm) lets us create memoized selectors, so useSelector won't run \n  // ? unless it's computed output is the same as before the action dispatched\n  // ? (Will still rerender if parent rerenders unless using connect or React.memo)\n  // const cartDropdownHidden = useSelector((state) => selectCartVisibility(state), lodash.isEqual)\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    currentUser: state => selectUserStatus(state),\n    cartDropdownHidden: state => selectCartVisibility(state)\n  });\n  const {\n    currentUser,\n    cartDropdownHidden\n  } = useSelector(structuredSelector, lodash.isEqual);\n  const dispatch = useDispatch(); // const signOut = async () => {\n  //     await auth.signOut();\n  // }\n\n  return /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoContainer, {\n    className: \"logo-container\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(NavLinksContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    className: \"link\",\n    to: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"SHOP\"), /*#__PURE__*/React.createElement(StyledLink, {\n    className: \"link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Contact\"), currentUser ? /*#__PURE__*/React.createElement(StyledLink, {\n    as: \"div\" // Replace styled component with new element, can be component\n    ,\n    className: \"link\",\n    onClick: () => dispatch(signOutStart()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(StyledLink, {\n    className: \"link\",\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), cartDropdownHidden ? null : /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default React.memo(Header);","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/client/src/components/navigation/Header.jsx"],"names":["React","useSelector","useDispatch","createStructuredSelector","selectCartVisibility","selectUserStatus","signOutStart","HeaderContainer","LogoContainer","NavLinksContainer","StyledLink","CartIcon","CartDropdown","lodash","Header","structuredSelector","currentUser","state","cartDropdownHidden","isEqual","dispatch","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,gBAAT,QAAiC,2CAAjC;AAEA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,iBAAzC,EAA4DC,UAA5D,QAA8E,iBAA9E,C,CAEA;;;AAGA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,QAAMC,kBAAkB,GAAGZ,wBAAwB,CAAC;AAChDa,IAAAA,WAAW,EAAGC,KAAD,IAAWZ,gBAAgB,CAACY,KAAD,CADQ;AAEhDC,IAAAA,kBAAkB,EAAGD,KAAD,IAAWb,oBAAoB,CAACa,KAAD;AAFH,GAAD,CAAnD;AAKA,QAAM;AAAED,IAAAA,WAAF;AAAeE,IAAAA;AAAf,MAAsCjB,WAAW,CAACc,kBAAD,EAAqBF,MAAM,CAACM,OAA5B,CAAvD;AAEA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B,CArBiB,CAuBjB;AACA;AACA;;AAEA,sBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,aAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,EAAE,EAAC,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,eAUI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,EAAE,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,EAAE,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAYQc,WAAW,gBACP,oBAAC,UAAD;AACI,IAAA,EAAE,EAAC,KADP,CACa;AADb;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,OAAO,EAAE,MAAMI,QAAQ,CAACd,YAAY,EAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBASP,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,EAAE,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBZ,eA2BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CAVJ,EA0CQY,kBAAkB,GACd,IADc,gBAEd,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CZ,CADJ;AAkDH,CA7ED;;AA+EA,eAAelB,KAAK,CAACqB,IAAN,CAAWP,MAAX,CAAf","sourcesContent":["import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { selectCartVisibility } from '../../redux/cart-dropdown/selectors/cart'\nimport { selectUserStatus } from '../../redux/user/selectors/user-selectors'\n\nimport { signOutStart } from '../../redux/user/user-actions'\nimport { HeaderContainer, LogoContainer, NavLinksContainer, StyledLink } from './header-styles'\n\n// ? Necesssary naming to import svg file\nimport { ReactComponent as Logo } from '../../assets/logo.svg'\n\nimport CartIcon from '../cart/cart-icon/cart-icon'\nimport CartDropdown from '../cart/cart-dropdown/cart-dropdown';\n\nimport lodash from 'lodash'\n\nconst Header = () => {\n\n    // ? When not memoized, this selector will run no matter what dispatch action ocurs\n    // const cartDropdownHidden = useSelector((state) => \n    // {\n    //  console.log('Cart Visible Selector')   \n    //  return state.cartDropDown.hideCart },lodash.isEqual)\n\n    // ? Reselect(npm) lets us create memoized selectors, so useSelector won't run \n    // ? unless it's computed output is the same as before the action dispatched\n    // ? (Will still rerender if parent rerenders unless using connect or React.memo)\n    // const cartDropdownHidden = useSelector((state) => selectCartVisibility(state), lodash.isEqual)\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        currentUser: (state) => selectUserStatus(state),\n        cartDropdownHidden: (state) => selectCartVisibility(state)\n    })\n\n    const { currentUser, cartDropdownHidden } = useSelector(structuredSelector, lodash.isEqual);\n\n    const dispatch = useDispatch()\n\n    // const signOut = async () => {\n    //     await auth.signOut();\n    // }\n\n    return (\n        <HeaderContainer>\n\n            <LogoContainer\n                className=\"logo-container\"\n                to=\"/\"\n            >\n                <Logo className=\"logo\" />\n\n            </LogoContainer>\n\n            <NavLinksContainer>\n\n                <StyledLink className=\"link\" to=\"/shop\">\n                    SHOP\n                </StyledLink>\n\n                <StyledLink className=\"link\" to=\"/\">\n                    Contact\n                </StyledLink>\n\n                {\n\n                    currentUser ?\n                        <StyledLink\n                            as='div' // Replace styled component with new element, can be component\n                            className=\"link\"\n                            onClick={() => dispatch(signOutStart())}\n                        >\n                            SIGN OUT\n                        </StyledLink>\n                        :\n                        <StyledLink className=\"link\" to=\"/signin\">\n                            SIGN IN\n                        </StyledLink>\n\n                }\n\n                <CartIcon />\n\n            </NavLinksContainer>\n\n            {\n                cartDropdownHidden ?\n                    null :\n                    <CartDropdown />\n            }\n\n        </HeaderContainer>\n    );\n};\n\nexport default React.memo(Header);"]},"metadata":{},"sourceType":"module"}