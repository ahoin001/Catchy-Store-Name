{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectShop, selectCollectionsIsFetching, selectShopCollections } from '../../redux/shop/shop-selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport './shop.scss'; // ? Give components loading screens using HOC\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // ? Shop component is nested in a route (check App.js) Route passes map, location and history props\n\nconst Shop = ({\n  match\n}) => {\n  // ? Structured selector makes it easier to add and use multiple selectors\n  const structuredSelector = createStructuredSelector({\n    isFetchingCollections: state => selectCollectionsIsFetching(state),\n    shop: state => selectShop(state)\n  });\n  const {\n    isFetchingCollections,\n    shop\n  } = useSelector(structuredSelector);\n  console.log(`@@@@@@@@@@@@@@`, shop);\n  const dispatch = useDispatch();\n  const fetchCollectionsAsyncAction = React.useCallback(() => dispatch(fetchCollectionsStartAsync()), [dispatch]); // ? Hit Firebase when component mounts to make sure Firebase Collection gives us most recent store collections \n\n  useEffect(() => {\n    const getShopData = () => {\n      fetchCollectionsAsyncAction();\n    };\n\n    getShopData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'shop-page',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isFetchingCollections\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isFetchingCollections\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","useEffect","Route","connect","useDispatch","useSelector","createStructuredSelector","fetchCollectionsStartAsync","selectShop","selectCollectionsIsFetching","selectShopCollections","WithSpinner","CollectionPage","CollectionsOverview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","match","structuredSelector","isFetchingCollections","state","shop","console","log","dispatch","fetchCollectionsAsyncAction","useCallback","getShopData","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,WAAjB,EAA8BC,WAA9B,QAAiD,aAAjD;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,UAAR,EAAoBC,2BAApB,EAAiDC,qBAAjD,QAA8E,iCAA9E;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AAEA,OAAO,aAAP,C,CAEA;;AACA,MAAMC,6BAA6B,GAAGH,WAAW,CAACE,mBAAD,CAAjD;AACA,MAAME,yBAAyB,GAAGJ,WAAW,CAACC,cAAD,CAA7C,C,CAEA;;AACA,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAExB;AACA,QAAMC,kBAAkB,GAAGZ,wBAAwB,CAAC;AAChDa,IAAAA,qBAAqB,EAAGC,KAAD,IAAWX,2BAA2B,CAACW,KAAD,CADb;AAEhDC,IAAAA,IAAI,EAAGD,KAAD,IAAWZ,UAAU,CAACY,KAAD;AAFqB,GAAD,CAAnD;AAMA,QAAM;AAAED,IAAAA,qBAAF;AAAyBE,IAAAA;AAAzB,MAAkChB,WAAW,CAACa,kBAAD,CAAnD;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb,EAA8BF,IAA9B;AAEA,QAAMG,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAMqB,2BAA2B,GAAGzB,KAAK,CAAC0B,WAAN,CAChC,MAAMF,QAAQ,CAACjB,0BAA0B,EAA3B,CADkB,EAEhC,CAACiB,QAAD,CAFgC,CAApC,CAdwB,CAqBxB;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM0B,WAAW,GAAG,MAAM;AAEtBF,MAAAA,2BAA2B;AAE9B,KAJD;;AAMAE,IAAAA,WAAW;AAEd,GAVQ,EAUN,EAVM,CAAT;AAcA,sBAEI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACW,IAAK,EAFxB;AAGI,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEV;AAA1C,OAAqEU,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAUI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,gBADxB;AAEI,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEV;AAAtC,OAAiEU,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAFJ;AAqBH,CAzDD;;AA2DA,eAAeb,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect,useDispatch, useSelector } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions'\nimport {selectShop, selectCollectionsIsFetching, selectShopCollections } from '../../redux/shop/shop-selectors'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner'\n\nimport CollectionPage from '../collection/collection'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\n\nimport './shop.scss'\n\n// ? Give components loading screens using HOC\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// ? Shop component is nested in a route (check App.js) Route passes map, location and history props\nconst Shop = ({ match }) => {\n\n    // ? Structured selector makes it easier to add and use multiple selectors\n    const structuredSelector = createStructuredSelector({\n        isFetchingCollections: (state) => selectCollectionsIsFetching(state),\n        shop: (state) => selectShop(state)\n\n    })\n\n    const { isFetchingCollections, shop } = useSelector(structuredSelector);\n    console.log(`@@@@@@@@@@@@@@`, shop)\n\n    const dispatch = useDispatch();\n\n    const fetchCollectionsAsyncAction = React.useCallback(\n        () => dispatch(fetchCollectionsStartAsync()),\n        [dispatch]\n    )\n\n\n\n    // ? Hit Firebase when component mounts to make sure Firebase Collection gives us most recent store collections \n    useEffect(() => {\n\n        const getShopData = () => {\n\n            fetchCollectionsAsyncAction()\n\n        }\n\n        getShopData();\n\n    }, [])\n\n\n\n    return (\n\n        <div className={'shop-page'}>\n\n            {/* Match path will be current nested components route, so /shop */}\n            {/* Render accepts function that I use to pass props and a component */}\n            <Route\n                exact\n                path={`${match.path}`}\n                render={(props) => <CollectionOverviewWithSpinner isLoading={isFetchingCollections} {...props} />}\n            />\n\n            <Route\n                path={`${match.path}/:collectionId`}\n                render={(props) => <CollectionPageWithSpinner isLoading={isFetchingCollections} {...props} />}\n            />\n\n        </div>\n    );\n\n\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}