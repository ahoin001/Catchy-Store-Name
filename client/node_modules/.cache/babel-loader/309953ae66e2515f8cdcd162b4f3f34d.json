{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../components/config/firebase/firebase-util';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user-actions'; // ***************************************************************\n//  Watcher Sagas\n// ***************************************************************\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, signUpWithEmail);\n}\nexport function* onGoogleSignUpStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_UP_START, signInWithGoogle);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n} // ***************************************************************\n//  Worker Sagas\n// ***************************************************************\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuthAndDispatchSignInSuccess(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    // ? Extract user auth object from auth sign in \n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    // ? Extract user auth object from auth sign in \n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log(`###### `, user);\n    yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    // ? Extract user auth object from auth sign in \n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpWitGoogle() {\n  try {\n    // ? Extract user auth object from auth sign in \n    const {\n      user\n    } = yield auth.S;\n    yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    // ? Extract user auth object from auth sign in \n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n} // ***************************************************************\n//  Helpers\n// ***************************************************************\n\nexport function* getSnapshotFromUserAuthAndDispatchSignInSuccess(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get(); // ? Use user Data to create action with user Object as payload\n    // ? put sends return object back to redux flow\n\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} // ***************************************************************\n//  Export Sagas\n// ***************************************************************\n// ? Export Sagas to root rootSaga\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignUpStart), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignUpStart","EMAIL_SIGN_UP_START","signUpWithEmail","onGoogleSignUpStart","GOOGLE_SIGN_UP_START","onSignOutStart","SIGN_OUT_START","signOut","userAuth","getSnapshotFromUserAuthAndDispatchSignInSuccess","error","payload","email","password","user","signInWithEmailAndPassword","signInWithPopup","console","log","createUserWithEmailAndPassword","signUpWitGoogle","S","userRef","userSnapShot","get","id","data","userSagas","onSignUpStart"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user-types'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../components/config/firebase/firebase-util'\n\nimport {\n    signInSuccess,\n    signInFailure,\n    signOutSuccess,\n    signOutFailure\n} from './user-actions'\n\n// ***************************************************************\n//  Watcher Sagas\n// ***************************************************************\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignUpStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_UP_START, signUpWithEmail)\n}\n\nexport function* onGoogleSignUpStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_UP_START, signInWithGoogle)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\n// ***************************************************************\n//  Worker Sagas\n// ***************************************************************\n\nexport function* isUserAuthenticated() {\n\n    try {\n\n        const userAuth = yield getCurrentUser()\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuthAndDispatchSignInSuccess(userAuth)\n\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\n    try {\n\n        // ? Extract user auth object from auth sign in \n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user)\n\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\nexport function* signInWithGoogle() {\n\n    try {\n\n        // ? Extract user auth object from auth sign in \n        const { user } = yield auth.signInWithPopup(googleProvider);\n        console.log(`###### `, user)\n\n        yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user)\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\nexport function* signUpWithEmail({ payload: { email, password } }) {\n\n    try {\n\n        // ? Extract user auth object from auth sign in \n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user)\n\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\nexport function* signUpWitGoogle() {\n\n    try {\n\n        // ? Extract user auth object from auth sign in \n        const { user } = yield auth.S\n        yield getSnapshotFromUserAuthAndDispatchSignInSuccess(user)\n\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\nexport function* signOut() {\n\n    try {\n\n        // ? Extract user auth object from auth sign in \n        yield auth.signOut()\n        yield put(signOutSuccess())\n\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n\n}\n\n// ***************************************************************\n//  Helpers\n// ***************************************************************\nexport function* getSnapshotFromUserAuthAndDispatchSignInSuccess(userAuth) {\n\n    try {\n\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapShot = yield userRef.get();\n\n        // ? Use user Data to create action with user Object as payload\n        // ? put sends return object back to redux flow\n        yield put(signInSuccess({\n            id: userSnapShot.id,\n            ...userSnapShot.data()\n        }))\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n\n}\n\n// ***************************************************************\n//  Export Sagas\n// ***************************************************************\n\n// ? Export Sagas to root rootSaga\nexport function* userSagas() {\n\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignUpStart),\n        call(onSignOutStart)\n    ])\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}