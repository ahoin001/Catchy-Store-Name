{"ast":null,"code":"import { useCallBack } from 'react'; // ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\n\nimport { createSelector } from 'reselect'; // ? Input selector getting the state of cart \n// ? State passed tp selector will reference here\n\nconst selectCart = state => state.cartDropDown;\n\nexport const selectCartItems = useCallback(() => {\n  createSelector([selectCart], //? Input selector being referenced\n  // ? Recieves input selector output as argument\n  cartDropDown => {\n    console.log(`Select cart selector:`);\n    return cartDropDown.cartItems;\n  });\n}, [selectCart]); // export const selectCartItems = createSelector(\n//     [selectCart], //? Input selector being referenced\n//     // ? Recieves input selector output as argument\n//     (cartDropDown) => {\n//         console.log(`Select cart selector:`)\n//         return cartDropDown.cartItems\n//     }\n// )\n\nexport const selectCartItemsCount = createSelector([selectCartItems], selectCartItems => {\n  console.log(`Cart items count selcetor:`);\n  return selectCartItems.reduce((accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  }, 0);\n});\nexport const selectCartVisibility = createSelector([selectCart], cartDropDown => {\n  console.log(`Cart Visibility selcetor:`);\n  return cartDropDown.hideCart;\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/selectors/cart.js"],"names":["useCallBack","createSelector","selectCart","state","cartDropDown","selectCartItems","useCallback","console","log","cartItems","selectCartItemsCount","reduce","accumulator","currentValue","quantity","selectCartVisibility","hideCart"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;AACA;;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGC,WAAW,CACtC,MAAM;AACFL,EAAAA,cAAc,CACV,CAACC,UAAD,CADU,EACI;AACd;AACCE,EAAAA,YAAD,IAAkB;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACA,WAAOJ,YAAY,CAACK,SAApB;AACH,GANS,CAAd;AAQH,CAVqC,EAWtC,CAACP,UAAD,CAXsC,CAAnC,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,oBAAoB,GAAGT,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CA,eAAD,IAAqB;AACjBE,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAAb;AACA,SAAOH,eAAe,CAACM,MAAhB,CAAuB,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACzD,WAAOD,WAAW,GAAGC,YAAY,CAACC,QAAlC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAP6C,CAA3C;AAUP,OAAO,MAAMC,oBAAoB,GAAGd,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE7CE,YAAD,IAAkB;AACdG,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;AACA,SAAOJ,YAAY,CAACY,QAApB;AACH,CAL6C,CAA3C","sourcesContent":["import { useCallBack } from 'react'\n\n// ? Selectors for getting slices of state\n// ? CreateSelector makes memoized selectors\nimport { createSelector } from 'reselect'\n\n// ? Input selector getting the state of cart \n// ? State passed tp selector will reference here\nconst selectCart = state => state.cartDropDown;\n\nexport const selectCartItems = useCallback(\n    () => {\n        createSelector(\n            [selectCart], //? Input selector being referenced\n            // ? Recieves input selector output as argument\n            (cartDropDown) => {\n                console.log(`Select cart selector:`)\n                return cartDropDown.cartItems\n            }\n        )\n    },\n    [selectCart],\n)\n// export const selectCartItems = createSelector(\n//     [selectCart], //? Input selector being referenced\n//     // ? Recieves input selector output as argument\n//     (cartDropDown) => {\n//         console.log(`Select cart selector:`)\n//         return cartDropDown.cartItems\n//     }\n// )\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    (selectCartItems) => {\n        console.log(`Cart items count selcetor:`)\n        return selectCartItems.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue.quantity\n        }, 0)\n    }\n)\n\nexport const selectCartVisibility = createSelector(\n    [selectCart],\n    (cartDropDown) => {\n        console.log(`Cart Visibility selcetor:`)\n        return cartDropDown.hideCart\n    }\n)\n"]},"metadata":{},"sourceType":"module"}