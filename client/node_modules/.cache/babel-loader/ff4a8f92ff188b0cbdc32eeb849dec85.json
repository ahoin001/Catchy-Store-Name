{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../shared/forminput/FormInput';\nimport { auth, createUserProfileDocumetn } from '../config/firebase/firebase-util';\nimport './dynamic.scss';\nimport '../shared/button/google-button.scss';\n\nconst Login = () => {\n  const [userInput, setuserInput] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    setuserInput({\n      email: '',\n      password: ''\n    });\n  };\n\n  const handleUserInput = e => {\n    // ? Name attribute in input allows getting the proper input\n    console.log(`INPUT NAME: `, e.target.name); // ? Copy UserInput, Then change one property\n    // ? (Will modify not add if new property would have been in spread)\n\n    setuserInput({ ...userInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //     <div className=\"form sign-up\">\n    //     <h2>Time to feel like home,</h2>\n    //     <label>\n    //         <span>Name</span>\n    //         <input type=\"text\" />\n    //     </label>\n    //     <label>\n    //         <span>Email</span>\n    //         <input type=\"email\" />\n    //     </label>\n    //     <label>\n    //         <span>Password</span>\n    //         <input type=\"password\" />\n    //     </label>\n    //     <button type=\"button\" className=\"submit\">Sign Up</button>\n    //     <button\n    //         onClick={googleSignIn}\n    //         type=\"button\"\n    //         className=\"fb-btn\"\n    //     >\n    //         Join with <span>Google</span>\n    //     </button>\n    // </div>\n    React.createElement(\"form\", {\n      className: \"form sign-in\",\n      onSubmit: handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Time to feel like home\"), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"name\",\n      type: \"text\",\n      handleChange: handleUserInput,\n      value: userInput.email,\n      label: \"Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: handleUserInput,\n      value: userInput.email,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      handleChange: handleUserInput,\n      value: userInput.password,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit\",\n      onClick: handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        let a;\n      },\n      type: \"button\",\n      className: \"loginBtn loginBtn--google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Connect with \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 111\n      }\n    }, \"Google\")))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx"],"names":["React","useState","FormInput","auth","createUserProfileDocumetn","Login","userInput","setuserInput","email","password","handleSignUp","event","preventDefault","handleUserInput","e","console","log","target","name","value","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,kCAAhD;AAEA,OAAO,gBAAP;AACA,OAAO,qCAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAA1C;;AAGA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,YAAY,CAAC;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAAD,CAAZ;AAEH,GALD;;AAOA,QAAMI,eAAe,GAAIC,CAAD,IAAO;AAE3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAb,EAA4BF,CAAC,CAACG,MAAF,CAASC,IAArC,EAH2B,CAK3B;AACA;;AACAX,IAAAA,YAAY,CACR,EACI,GAAGD,SADP;AAEI,OAACQ,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAF9B,KADQ,CAAZ;AAOH,GAdD;;AAgBA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAGI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,QAAQ,EAAET,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,eAOI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,YAAY,EAAEG,eAHlB;AAII,MAAA,KAAK,EAAEP,SAAS,CAACE,KAJrB;AAKI,MAAA,KAAK,EAAC,MALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAgBI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,YAAY,EAAEK,eAHlB;AAII,MAAA,KAAK,EAAEP,SAAS,CAACE,KAJrB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAyBI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,YAAY,EAAEK,eAHlB;AAII,MAAA,KAAK,EAAEP,SAAS,CAACG,QAJrB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,eAkCI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAEC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlCJ,eAmCI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,YAAIU,CAAJ;AAAO,OAA/B;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAC,2BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlG,CAnCJ;AAjCJ;AA4EH,CAxGD;;AA0GA,eAAef,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport FormInput from '../shared/forminput/FormInput'\nimport { auth, createUserProfileDocumetn } from '../config/firebase/firebase-util'\n\nimport './dynamic.scss'\nimport '../shared/button/google-button.scss'\n\nconst Login = () => {\n\n    const [userInput, setuserInput] = useState({ email: '', password: '' })\n\n\n    const handleSignUp = (event) => {\n\n        event.preventDefault();\n        setuserInput({ email: '', password: '' })\n\n    }\n\n    const handleUserInput = (e) => {\n\n        // ? Name attribute in input allows getting the proper input\n        console.log(`INPUT NAME: `, e.target.name)\n\n        // ? Copy UserInput, Then change one property\n        // ? (Will modify not add if new property would have been in spread)\n        setuserInput(\n            {\n                ...userInput,\n                [e.target.name]: e.target.value,\n            }\n        )\n\n    }\n\n    return (\n\n    //     <div className=\"form sign-up\">\n\n    //     <h2>Time to feel like home,</h2>\n    //     <label>\n    //         <span>Name</span>\n    //         <input type=\"text\" />\n    //     </label>\n    //     <label>\n    //         <span>Email</span>\n    //         <input type=\"email\" />\n    //     </label>\n    //     <label>\n    //         <span>Password</span>\n    //         <input type=\"password\" />\n    //     </label>\n    //     <button type=\"button\" className=\"submit\">Sign Up</button>\n\n    //     <button\n    //         onClick={googleSignIn}\n    //         type=\"button\"\n    //         className=\"fb-btn\"\n\n    //     >\n\n    //         Join with <span>Google</span>\n\n    //     </button>\n\n    // </div>\n\n\n        <form\n            className=\"form sign-in\"\n            onSubmit={handleSignUp}\n        >\n\n            <h2>Time to feel like home</h2>\n\n            <FormInput\n                name='name'\n                type='text'\n                handleChange={handleUserInput}\n                value={userInput.email}\n                label='Name'\n                required\n            />\n\n            <FormInput\n                name='email'\n                type='email'\n                handleChange={handleUserInput}\n                value={userInput.email}\n                label='Email'\n                required\n            />\n\n            <FormInput\n                name='password'\n                type='password'\n                handleChange={handleUserInput}\n                value={userInput.password}\n                label='Password'\n                required\n            />\n\n            <button type=\"button\" className=\"submit\" onClick={handleSignUp}>Sign Up</button>\n            <button onClick={() => {let a;}} type=\"button\" className=\"loginBtn loginBtn--google\">Connect with <span>Google</span></button>\n\n            {/* <input type=\"submit\" value=\"Submit Form\" /> */}\n\n        </form>\n\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}