{"ast":null,"code":"import cartActionTypes from \"./cart-dropdown-types\"; // ? Adds items to list and groups similar items\n\nimport { addItemToCart } from './cart-util';\nconst initialState = {\n  hideCart: true,\n  cartItems: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGE_CART_DISPLAY:\n      return { ...state,\n        hideCart: !state.hideCart\n      };\n\n    case cartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case cartActionTypes.REMOVE_ITEM_FROM_CART:\n      return { ...state,\n        // filter out any item that matches id's with itembeing removed\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/cart-dropdown/cart-dropdown-reducer.js"],"names":["cartActionTypes","addItemToCart","initialState","hideCart","cartItems","state","action","type","TOGGE_CART_DISPLAY","ADD_ITEM","payload","REMOVE_ITEM_FROM_CART","filter","item","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B,C,CACA;;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,eAAe,CAACQ,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAFd,OAAP;;AAKJ,SAAKH,eAAe,CAACS,QAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHD,QAAAA,SAAS,EAAEH,aAAa,CAACI,KAAK,CAACD,SAAP,EACpBE,MAAM,CAACI,OADa;AAFrB,OAAP;;AAMJ,SAAKV,eAAe,CAACW,qBAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEH;AACAD,QAAAA,SAAS,EAAEC,KAAK,CAACD,SAAN,CAAgBQ,MAAhB,CACPC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeI,EAD5B;AAHR,OAAP;;AAQJ;AACI,aAAOT,KAAP;AAzBR;AA2BH,CA5BD","sourcesContent":["import cartActionTypes from \"./cart-dropdown-types\";\n// ? Adds items to list and groups similar items\nimport { addItemToCart } from './cart-util'\n\nconst initialState = {\n    hideCart: true,\n    cartItems: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n        case cartActionTypes.TOGGE_CART_DISPLAY:\n            return {\n                ...state,\n                hideCart: !state.hideCart\n            }\n\n        case cartActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems,\n                    action.payload)\n            }\n\n        case cartActionTypes.REMOVE_ITEM_FROM_CART:\n            return {\n                ...state,\n                // filter out any item that matches id's with itembeing removed\n                cartItems: state.cartItems.filter(\n                    item => item.id !== action.payload.id\n                )\n            }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}