{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth, createUserProfileDocument } from '../config/firebase/firebase-util';\nimport { signUpStart } from '../../redux/user/user-actions';\nimport FormInput from '../shared/forminput/FormInput';\nimport './dynamic.scss';\nimport '../shared/button/google-button.scss';\n\nconst Login = () => {\n  const [userInput, setuserInput] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n\n  const handleSignUp = async event => {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = userInput;\n    dispatch(signUpStart({\n      name,\n      email,\n      password\n    })); // try {\n    // ? Creates user and signs user in, returns object with user key to get user data\n    // ? This saves user in Firebase authentication, but not our database where user data can be used \n    // const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    // console.log('User from sign up: ', user)\n    // // ? Save the user as a document to firestore\n    // await createUserProfileDocument(user, { name })\n    // Clear form \n    // setuserInput(\n    //     {\n    //         name: '',\n    //         email: '',\n    //         password: '',\n    //     }\n    // )\n    // } catch (error) {\n    //     console.log('Error creation', error)\n    // }\n  };\n\n  const handleUserInput = e => {\n    // ? Name attribute in input allows getting the proper input\n    // console.log(`INPUT NAME: `, e.target.name)\n    // ? Copy UserInput, Then change one property\n    // ? (Will modify not add if new property would have been in spread)\n    setuserInput({ ...userInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form sign-up\",\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Time to feel like home\"), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"name\",\n    type: \"text\",\n    handleChange: handleUserInput,\n    value: userInput.name,\n    label: \"Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleUserInput,\n    value: userInput.email,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleUserInput,\n    value: userInput.password,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"submit\",\n    onClick: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {},\n    type: \"button\",\n    className: \"loginBtn loginBtn--google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Join with \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 103\n    }\n  }, \"Google\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/components/login/DynamicSignUp.jsx"],"names":["React","useState","useDispatch","auth","createUserProfileDocument","signUpStart","FormInput","Login","userInput","setuserInput","name","email","password","dispatch","handleSignUp","event","preventDefault","handleUserInput","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\n\nimport { auth, createUserProfileDocument } from '../config/firebase/firebase-util'\n\nimport { signUpStart } from '../../redux/user/user-actions'\nimport FormInput from '../shared/forminput/FormInput'\n\nimport './dynamic.scss'\nimport '../shared/button/google-button.scss'\n\nconst Login = () => {\n\n    const [userInput, setuserInput] = useState({ name: '', email: '', password: '' })\n\n    const dispatch = useDispatch()\n\n    const handleSignUp = async (event) => {\n\n        event.preventDefault();\n\n        const { name, email, password } = userInput\n\n        dispatch(signUpStart({ name, email, password }))\n\n        // try {\n\n            // ? Creates user and signs user in, returns object with user key to get user data\n            // ? This saves user in Firebase authentication, but not our database where user data can be used \n            // const { user } = await auth.createUserWithEmailAndPassword(email, password)\n\n            // console.log('User from sign up: ', user)\n\n            // // ? Save the user as a document to firestore\n            // await createUserProfileDocument(user, { name })\n\n            // Clear form \n            // setuserInput(\n            //     {\n            //         name: '',\n            //         email: '',\n            //         password: '',\n            //     }\n            // )\n\n        // } catch (error) {\n        //     console.log('Error creation', error)\n        // }\n\n    }\n\n    const handleUserInput = (e) => {\n\n        // ? Name attribute in input allows getting the proper input\n        // console.log(`INPUT NAME: `, e.target.name)\n\n        // ? Copy UserInput, Then change one property\n        // ? (Will modify not add if new property would have been in spread)\n        setuserInput(\n            {\n                ...userInput,\n                [e.target.name]: e.target.value,\n            }\n        )\n\n    }\n\n    return (\n\n        <form\n            className=\"form sign-up\"\n            onSubmit={handleSignUp}\n        >\n\n            <h2>Time to feel like home</h2>\n\n            <FormInput\n                name='name'\n                type='text'\n                handleChange={handleUserInput}\n                value={userInput.name}\n                label='Name'\n                required\n            />\n\n            <FormInput\n                name='email'\n                type='email'\n                handleChange={handleUserInput}\n                value={userInput.email}\n                label='Email'\n                required\n            />\n\n            <FormInput\n                name='password'\n                type='password'\n                handleChange={handleUserInput}\n                value={userInput.password}\n                label='Password'\n                required\n            />\n\n            <button type=\"button\" className=\"submit\" onClick={handleSignUp}>Sign Up</button>\n            <button onClick={() => { }} type=\"button\" className=\"loginBtn loginBtn--google\">Join with <span>Google</span></button>\n\n            {/* <input type=\"submit\" value=\"Submit Form\" /> */}\n\n        </form>\n\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}