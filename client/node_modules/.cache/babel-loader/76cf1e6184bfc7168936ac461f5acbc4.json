{"ast":null,"code":"import { ShopActionTypes } from './shop-types'; // ? Switches Reducer fetching state\n\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // ? With thunk middleware enabled, any dispatch of a function instead of an object will \n// ? be given dispatch as it's' first argument. Now can dispatch multiple actions so we can do multiple async actions\n// export const fetchCollectionsStartAsync = () => {\n//     // ? Thunks are just functions that return a function with access to dispatch, so we can dispatch multiple actions\n//     return dispatch => {\n//         const collectionRef = firestore.collection('collections')\n//         dispatch(fetchCollectionsStart())\n//         collectionRef.get()\n//             .then(snapshot => {\n//                 const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n//                 // console.log(`&&&&&&&&&&&&&&&&&&&&&&&&& MAP: `,collectionsMap)\n//                 dispatch(fetchCollectionsSuccess(collectionsMap))\n//             })\n//             .catch(error => dispatch(fetchCollectionsFailure(error)))\n//     }\n// }","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/GitHub/ecommerce/src/redux/shop/shop-actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC,C,CAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEF,eAAe,CAACG;AADnB,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AAEvDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAFiC;AAGvDC,EAAAA,OAAO,EAAEF;AAH8C,CAApB,CAAhC;AAQP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AAEtDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAFgC;AAGtDH,EAAAA,OAAO,EAAEE;AAH6C,CAAnB,CAAhC,C,CAOP;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { ShopActionTypes } from './shop-types'\n\n// ? Switches Reducer fetching state\nexport const fetchCollectionsStart = () => {\n    return {\n        type: ShopActionTypes.FETCH_COLLECTIONS_START,\n    }\n}\n\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n\n})\n\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n\n})\n\n// ? With thunk middleware enabled, any dispatch of a function instead of an object will \n// ? be given dispatch as it's' first argument. Now can dispatch multiple actions so we can do multiple async actions\n// export const fetchCollectionsStartAsync = () => {\n\n//     // ? Thunks are just functions that return a function with access to dispatch, so we can dispatch multiple actions\n//     return dispatch => {\n\n//         const collectionRef = firestore.collection('collections')\n//         dispatch(fetchCollectionsStart())\n\n//         collectionRef.get()\n//             .then(snapshot => {\n//                 const collectionsMap = convertCollectionSnapShotToMap(snapshot)\n//                 // console.log(`&&&&&&&&&&&&&&&&&&&&&&&&& MAP: `,collectionsMap)\n//                 dispatch(fetchCollectionsSuccess(collectionsMap))\n//             })\n//             .catch(error => dispatch(fetchCollectionsFailure(error)))\n\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}